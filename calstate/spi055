      SUBROUTINE POINT
C
        DOUBLE PRECISION MODNAM,MNAME,NAME
C
      COMMON NODPLC(800),YNL(2001),TSTORE(2001),TRACUR(1700),VN(401), 
     1   VNIM1(401),IORDER(401),IUR(402),IUC(800),MATLOC(1800)
      COMMON/INDATA/NUMEL,NUNODS,NUMNOD,NOSTOP,JELCNT(20),LOCATE(21), 
     1   ICURNT(21),JUNODE(401),NAME(200),LOCAL(200),MNAME(200)
      COMMON/MISCEL/NOGO,IGOOF,NOPRNT,IACCT,JOBNAM(16),IDI,IDO
      COMMON/POINTS/IUS,ILS,MIRROR,NSTOP,NUMVS,LASTUT,LASTLT
C 
C 
      DIMENSION JMNODE(1),NUMOFF(1),NOTOLO(1),IURTMP(1),IUCTMP(1),
     1   ITROW(1),ITCOL(1)
      EQUIVALENCE (JMNODE(1),VN(1))
      EQUIVALENCE (NUMOFF(1),IURTMP(1),YNL(1))
      EQUIVALENCE (NOTOLO(1),IUCTMP(1),YNL(402))
      EQUIVALENCE (ITROW(1),YNL(802)) 
      EQUIVALENCE (ITCOL(1),YNL(1002))
C 
C 
      IGOOF=0 
      NEXNOD=1
      IF (NSTOP.LT.2) GO TO 300
C 
C  COMPUTE NUMBER OF OFF DIAGONAL TERMS FOR EACH ROW AND CONSTRUCT
C  LIST OF ROWS WITH ONE OFF DIAGONAL TERM
C 
      NTERMS=0
      DO 20 I=1,NUMNOD
      NUMOFF(I)=IUR(I+1)-IUR(I)
      IF (JMNODE(I).GT.NSTOP) GO TO 20
      IF (NUMOFF(I).GT.1) GO TO 20
      NTERMS=NTERMS+1 
      NOTOLO(NTERMS)=I
   20 CONTINUE
C 
C  LOAD ROWS CONTAINED IN NOTOLO ARRAY.  A ROW IS LOADED BY SWAPPING
C  ITS IORDER AND JMNODE ENTRIES WITH THE ENTRIES CORRESPONDING TO
C  ROW NEXNOD 
C 
   50 ITERM=0 
   60 ITERM=ITERM+1
      IF (ITERM.GT.NTERMS) GO TO 100
      LOAD=NOTOLO(ITERM)
      NODE=IORDER(NEXNOD) 
      IROW=JMNODE(LOAD)
      JMNODE(NODE)=IROW
      JMNODE(LOAD)=NEXNOD 
      IORDER(IROW)=NODE
      IORDER(NEXNOD)=LOAD 
      NEXNOD=NEXNOD+1 
      IF (NEXNOD.GE.NSTOP) GO TO 300
C 
C  REDUCE THE NUMBER OF OFF DIAGONAL TERMS BY ONE FOR EACH COLUMN 
C  ELEMENT OF THE ROW JUST LOADED 
C 
      JSTART=IUR(LOAD)
      JSTOP=IUR(LOAD+1)-1 
      IF (JSTART.GT.JSTOP) GO TO 60
      DO 70 J=JSTART,JSTOP
      IROW=IUC(J) 
      IF (JMNODE(IROW).LT.NEXNOD) GO TO 70
      NUMOFF(IROW)=NUMOFF(IROW)-1 
C 
C  IF THIS SUBTRACTION CAUSES THE NUMBER OF OFF DIAGONAL TERMS IN IROW
C  TO BE ONE, ADD IROW TO THE NOTOLO ARRAY
C 
      IF (NUMOFF(IROW).NE.1) GO TO 70 
      NTERMS=NTERMS+1 
      NOTOLO(NTERMS)=IROW 
   70 CONTINUE
      GO TO 60
C 
C  ALL REMAINING ROWS HAVE AT LEAST TWO OFF DIAGONAL TERMS.  DETERMINE
C  THE ROW WHICH WILL CAUSE THE LEAST AMOUNT OF FILLIN.  IF TWO OR MORE
C  ROWS CAUSE THE SAME FILLIN, SELECT THE ONE WITH THE LARGEST NUMBER 
C  OF OFF DIAGONAL TERMS
C 
  100 IFILL=160000
      LOAD=IORDER(NEXNOD) 
      DO 150 I=NEXNOD,NSTOP
      IRFILL=0
      NODE=IORDER(I)
C 
C  THE FILLIN IS DETERMINED BY A MOCK DECOMPOSITION OF EACH ROW
C  ASSUMING IT IS LOADED NEXT 
C 
      JSTART=IUR(NODE)
      JSTOP=IUR(NODE+1)-1 
      DO 130 J=JSTART,JSTOP
      JO=IUC(J)
      IF (JMNODE(JO).LT.NEXNOD) GO TO 130 
      LSTART=IUR(JO)
      LSTOP=IUR(JO+1)-1
      K=J 
  110 K=K+1
      IF (K.GT.JSTOP) GO TO 130
      KO=IUC(K)
      IF (JMNODE(KO).LT.NEXNOD) GO TO 110 
C 
C  TEST FOR (JO,KO) MATRIX TERM.  IF THIS TERM DOESNT EXIST, IT WILL
C  BE CREATED IN DECOMPOSING THIS ROW 
C 
      DO 120 L=LSTART,LSTOP
      IF (IUC(L).EQ.KO) GO TO 110 
  120 CONTINUE
      IRFILL=IRFILL+1 
      IF (IRFILL.GT.IFILL) GO TO 150
      GO TO 110
  130 CONTINUE
      IF (IRFILL.LT.IFILL) GO TO 140
      IF (NUMOFF(NODE).LE.NUMOFF(LOAD)) GO TO 150 
  140 LOAD=NODE
      IFILL=IRFILL
      IF (IFILL.EQ.0) GO TO 200
  150 CONTINUE
C 
C  LOAD IS NOW THE ROW WHICH WILL CAUSE THE MINIMUM FILLIN.  RESERVE
C  THE FILLIN TERMS IN IUR AND IUC ARRAYS AND PUT LOAD IN LIST OF ROWS
C  TO BE LOADED
C 
  200 NTERMS=1
      NOTOLO(1)=LOAD
      IF (IFILL.EQ.0) GO TO 50
      IRFILL=0
      JSTART=IUR(LOAD)
      JSTOP=IUR(LOAD+1)-1 
      DO 230 J=JSTART,JSTOP
      JO=IUC(J)
      IF (JMNODE(JO).LT.NEXNOD) GO TO 230 
      LSTART=IUR(JO)
      LSTOP=IUR(JO+1)-1
      K=J 
  210 K=K+1
      IF (K.GT.JSTOP) GO TO 230
      KO=IUC(K)
      IF (JMNODE(KO).LT.NEXNOD) GO TO 210 
      DO 220 L=LSTART,LSTOP
      IF (IUC(L).EQ.KO) GO TO 210 
  220 CONTINUE
C 
C  ALL FILLIN TERMS ARE STORED TEMPORARILY TO AVOID ALTERING THE
C  POINTERS IN THE MIDDLE OF THE MOCK DECOMPOSITION
C 
      IRFILL=IRFILL+1 
      IF (IRFILL.GT.200) GO TO 1000
      ITROW(IRFILL)=JO
      ITCOL(IRFILL)=KO
      GO TO 210
  230 CONTINUE
C 
C  NOW INSERT ALL FILLIN TERMS IN THE POINTERS
C 
      DO 240 I=1,IRFILL
      JO=ITROW(I) 
      KO=ITCOL(I) 
      NUMOFF(JO)=NUMOFF(JO)+1 
      NUMOFF(KO)=NUMOFF(KO)+1 
      CALL RESERV(JO,KO)
  240 CONTINUE
      GO TO 50
C 
C  RELOAD IUR,IUC ARRAYS WITH USING THE REORDERED NODE NUMBERS.  RETAIN
C  ONLY THE UPPER TRIANGLE TERMS, EXCEPT FOR SOURCE NODES, WHERE ONLY 
C  THE LOWER TRIANGLE TERM IS RETAINED
C 
  300 IF (IGOOF.EQ.1) RETURN
      IUTOT=0 
      IF (NSTOP.EQ.0) GO TO 350
      DO 320 I=1,NSTOP
      IURTMP(I)=IUTOT+1
      NODE=IORDER(I)
      JSTART=IUR(NODE)
      JSTOP=IUR(NODE+1)-1 
      IF (JSTART.GT.JSTOP) GO TO 320
      DO 310 J=JSTART,JSTOP
      IROW=IUC(J) 
      LOAD=JMNODE(IROW)
      IF (LOAD.LT.I) GO TO 310
      IUTOT=IUTOT+1
      IUCTMP(IUTOT)=LOAD
  310 CONTINUE
  320 CONTINUE
  350 ISTART=NSTOP+1
      IF (ISTART.GT.NUMNOD) GO TO 400 
      DO 370 I=ISTART,NUMNOD
      IURTMP(I)=IUTOT+1
      NODE=IORDER(I)
      JSTART=IUR(NODE)
      JSTOP=IUR(NODE+1)-1 
      IF (JSTART.GT.JSTOP) GO TO 370
      DO 360 J=JSTART,JSTOP
      IROW=IUC(J) 
      LOAD=JMNODE(IROW)
      IUTOT=IUTOT+1
      IUCTMP(IUTOT)=LOAD
  360 CONTINUE
  370 CONTINUE
  400 IUR(NUMNOD+1)=IUTOT+1
      IF (IUTOT.GT.800) GO TO 1000
      DO 410 I=1,NUMNOD
  410 IUR(I)=IURTMP(I)
      IF (IUTOT.EQ.0) RETURN
      DO 420 I=1,IUTOT
  420 IUC(I)=IUCTMP(I)
      RETURN
 1000 IGOOF=1 
      RETURN
      END 

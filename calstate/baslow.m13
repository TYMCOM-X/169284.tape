TITLE   BASLOW -- BASIC LOW. SEG CODE
SUBTTL  FOR TYMSHARE BASIC SYSTEM

P=17
IFNDEF %LOL,<%LOL==^D256>

RELOC
INTERN TOPWRD,STAR,RUNBFG,RUNBB,COMONY,JUSTRN,SAVB,TOPWRD,BIN,COMOLY
INTERN MATFLG,SVT1,SVG,SVE,ADR,RANFLG,BINNAM,REE
	INTERN INVFLG,INVLRG,TRNFLG,TRNFL2,RUNLIN,TEMLOC,IFFLAG,STSTRP,FILFLG,LOKFLG,FILUSN
	INTERN TABFG,EXTFG,LIBFLG,SORCLN,PAGCNT,FIRSFL,PARAM,QLSPEC
	INTERN LETSW,PDP6SW,MTIME,REFROL,LINNUM,FILCNT,FILTYP
	INTERN UFD,FILNM,IBF,PAKFLG,SJOBSA,SJOBRL,RANTST,RANCNT
	INTERN CATFLG,DEVICE,ININI1,OBF,MONLVL,QUOFLG,EXTD,FLOAT
	INTERN QUOFL1,UXFLAG,COPFLG,RETUR1,SWAPSS,DSKSYS,USGFLG
	INTERN CHAFLG,CHAFL2,WRREFL,WRIPRI,REAINP,EOFFLG,ZONFLG
	INTERN MARGIN,TTYPAG,TABLE,PAGLIM,QUOTBL,MARWAI,REATMP
	INTERN BLOCK,MODBLK,STRLEN,LASREC,HEDFLG,POINT,VRFSET
	INTERN STRFCN,STRPTR,STRCTR,VALPTR,MIDSAV,LOCLOF,COMTIM
	INTERN MASAPP,NUMMSP,NUMAPP,APPLST,VRFBOT,VRFTOP,SRTDBA,GTSTS
	INTERN TRAIL,LEAD,TRPLOC,VRFBTB


;AC'S
N==0
C==5

;LINKUP SUBROUTINE
;THIS IS %LINKUP
; AC N HAS ARGUMENT:  LH = 1 FOR BASUIF, 2 FOR BASCOM, 3 FOR BASRUN
;                     RH = ENTRY VECTOR LOCATION
;
        INTERN %LINKUP,SEGB
EXTERN JOBFF
        INTERN TOPJOB
TOPWRD: BLOCK 200
        INTERN SAVBB,XLFLG,XLFLG1
TOPJOB: 0
XLFLG1: 0               ;FLG FOR ; IN PRINT STATEMENT
XLFLG:  0               ;XLET FLAG TO SAVE F REG ON RET FROM FORMLB
SAVBB:  0
COMONY: 0
COMOLY: 0
RUNBB:  0
JUSTRN: 0
SAVB:   OCT 17
        SIXBIT/DSK/
        XWD TYO,
BIN:    0
        INTERN JRS
JRS:            JRST STAR
STAR:   SKIPA
        SETOM RUNBB
        SETOM RUNBFG
        SETOM LOKFLG
        CALLI 
        MOVE P,PLIST
        SETOM REE
        MOVE 1,CETMP
        SETZM (1)
        MOVE 0,[3,,%EXECUT]     
        JRST %LINKU
%LINKU:        SKIPN REE
        OUTPUT  ;GET RID OF ANY OUTPUT
        INTERN LINKU2
LINKU2: MOVEM N,SAV0
        MOVE N,[1,,SAV1]
        BLT N,SAV0+17
        
        MOVE N,SAV0
        HLRZ C,N
        CAIG    C,3
        CAIGE   C,1
        JRST    [OUTSTR [ASCIZ /
BASIC RUNTIME ERROR:
ILLEGAL SEG. CALL FOR %LINKUP IN AC N/]
                HALT .-1]
        EXTERN JOBDDT,%TTYIN,%EXECUT
        SKIPN JOBDDT
        JRST LINK1
        MOVE 1,SYM(C)
        MOVEM 1,116
LINK1:        MOVE    C,%SEGS(C)      ;GET SEG. NAME
        MOVE    C+1,C           ;SAVE FOR SETNAME
        MOVEM   C,SEGB+1
        SETZM   SEGB+2
        SETZM   SEGB+3
        SETZM   SEGB+5
        HRRZI    C,SEGB
        GETSEG  C,
        JRST    [OUTSTR [ASCIZ /
BASIC RUNTIME ERROR:
CAN NOT GET SEG. FOR %LINKUP AS SPECIFIED IN AC N/]
                HALT .-1]
        EXTERN JOBREN,%REUXIT,%BASIC
        INTERNAL REENTR
        HRRZI N,REENTR
        HRRM N,JOBREN
        SETNAM  C+1,            ;SET PROG. NAME

        SKIPN REE
        TTCALL 10,0     ;RESCAN

        SETZM REE
        MOVE P,PLIST
        PUSHJ P, %TTYIN
        MOVE [JSR UUOH]
        MOVEM 41
        MOVE N,[%CMDFLO,,FLOOR]
        BLT N,FLOOR+4
        MOVE N,[%CMDCEI,,CEIL]
        BLT N,CEIL+4
        MOVE N,%TRPMSG
        HRRM N,TRPLOC
        MOVE N,[SAV1,,1]
        BLT N,17
        MOVE N,SAV0
        HRRZ    N,N
        CAIGE   N,400000        ;ENTRY VECT. IN HIGH SEG
        JRST    [OUTSTR [ASCIZ /
BASIC RUNTIME ERROR:
ENTRY VECT. IN AC N FOR %LINKUP NOT IN HI-SEG/]
                HALT .-1]
        MOVE    C,@(N)          ;SEE IF ENTRY VECT. THERE
        JUMPE   C,[OUTSTR [ASCIZ /
BASIC RUNTIME ERROR:
ENTRY VECT. FOR %LINKUP NON-EXISTANT IN SEG. AS SPECIFIED IN AC N/]
                HALT .-1]
        JRST    @N              ;AND JUMP THROUGH GATE

REENTR:	SKIPL	RENFLA
	JRST	REENT1
        INTERN REENT2
REENT2:        SETZM TYO+2
        SETZM TYI+2
        SETOM REE
	SKIPLE	COMTIM
        JRST [MOVE N,[1,,%REUXIT]
                JRST %LINKU]
        JRST [MOVE N,[1,,%BASIC]
                JRST %LINKU]
REENT1:	AOS	RENFLA		;MAKE REQUEST BY SETTING FLAG PLUS
	JRST	2,@JOBOPC
REE:    0
RUNBFG: BLOCK 1

SAV0:   0
SAV1:   BLOCK 17
;SEG BLOCK
SYM:    BLOCK 4
SEGB:   SIXBIT  /DSK/
        Z                       ;PROG NAME
        Z                       ;LOW EXT
        Z
        Z                       ;PROJ,,PROG
        Z                       ;CORE

;SEG #S
%SEGS:  Z
        SIXBIT  /XBASIC/
        SIXBIT  /BASCOM/
        SIXBIT  /BASRUN/
        Z
; TEMPORARY LOCATIONS FOR FUTURE MODS

;FIXED STORAGE AREA

FILFLG:	BLOCK	1
STSTRP:	SETSTS	0,000100
TRAIL:	BLOCK	1	;FLAGS FOR
LEAD:	BLOCK	1	;USING STATEMENTS.
FLOAT:	BLOCK	1
USGFLG:	BLOCK	1	;USED BY RES TO SEE IF # FOLLOWING USING IS LINE #.
VRFBTB:	BLOCK	1
VRFSET:	BLOCK	1
LOCLOF:	BLOCK	1	;USED BY XINFCN.
COMTIM:	BLOCK	1	;-1=COMPILE TIME, 1=EXEC TIME, 0=COMMAND TIME.
REATMP:	BLOCK	1	;USED BY STRETT.
FILTYP:	BLOCK	1
IFFLAG:	BLOCK	1
MIDSAV:	BLOCK	1	;USED BY MIDB.
STRFCN: BLOCK	1	;USED BY STRB.
STRPTR: BLOCK	1
STRCTR: BLOCK	1
VALPTR: BLOCK	1	;USED BY VALB.
NUMMSP:	BLOCK	1	;USED BY THE CORE MANAGER.
NUMAPP:	BLOCK	1
VRFBOT:	BLOCK	1
VRFTOP:	BLOCK	1
POINT:	BLOCK	9	;USED BY THE R.A. ROUTINES.
BLOCK:	BLOCK	9
MODBLK:	BLOCK	9
STRLEN:	BLOCK	9
LASREC:	BLOCK	9
DSKSYS:	BLOCK	1
FILCNT: BLOCK	1
RANTST:	BLOCK	1
RANCNT:	BLOCK	1
ZONFLG:	BLOCK	^D10	;USED TO FORCE COMMAS TO SPACE.
EOFFLG:	BLOCK	^D9
FIRSFL:	BLOCK	^D10	;TELLS IF ANY OUTPUT HAS BEEN DONE ON THIS PAGE.
TTYPAG:	BLOCK	1
PAGCNT:	BLOCK	^D10
PAGLIM:	BLOCK	^D10
QUOTBL:	BLOCK	^D10
TABLE:	BLOCK	1
PARAM:			;WARNING ********************************
WRIPRI:	BLOCK	^D9	;PARAM IS A ^D32 WORD BLOCK FOR USE BY QUEUE.
QUEUER:	BLOCK	76	;DEC SCREWUP AGAIN
EXTDFG: BLOCK   1       ;EXTENSION DEFAULT FLAG
EXTDF1: BLOCK   1       ;DITTO FOR COPY
REAINP:	BLOCK	^D9
MARGIN:	BLOCK	^D10
MARWAI:	BLOCK	^D10
SVT1:   BLOCK 1
SVG:    BLOCK 1
SVE:    BLOCK 1
ADR:    BLOCK 1
RANFLG: BLOCK 1
MATFLG: BLOCK 1
WRREFL:	BLOCK	1	;INDICATES STATEMENT CURRENTLY BEING COMPILED BY
			;0 FOR PRINT# OR INPUT#, -1 FOR WRITE# OR READ#.
	INTERN QUEUER
CHAFL2:	BLOCK	1
COPFLG:	BLOCK	1	;COPFLG IS USED BY THE COPY ROUTINE.
HEDFLG:	BLOCK	1	;HEADING FLAG FOR QUEUE AND UNSAVE.
LOKFLG:	Z
RETUR1:	BLOCK	1
SORCLN:	BLOCK	1	;SORCLN CONTAINS THE CURRENT SOURCE
			;LINE NUMBER AT EXECUTION TIME.
RUNLIN:	BLOCK	1	;RUNLIN CONTAINS -1 IF THE RUN(NH)
			;COMMAND HAD NO LINE NUMBER ARG; O'E,
			;RUNLIN CONTAINS THE LINE NUMBER ARG.
TRNFLG:	BLOCK	1	;USED TO HANDLE SETTING A
TRNFL2:	BLOCK	1	;MATRIX EQUAL TO ITS OWN TRANSPOSE.
INVFLG:	BLOCK	1	;NE 0 MEANS INVERTING A MATRIX.
INVLRG:	BLOCK	1	;DURING MAT INV HAS ELM OF LRGS MAG.
QUOFL1:	BLOCK	1
UXFLAG:	BLOCK	1
MONLVL:	BLOCK	1	;DISTINGUISHES BETWEEN LEVEL C AND LEVEL D.
QUOFLG:	BLOCK	1
FRSTLN:	BLOCK	1
LASTLN:	BLOCK	1
LOWEST:	BLOCK	1	;RESEQUENCE LINES WITH NUMBERS >=LOWEST
PREAD:	BLOCK	2	;POINTER TO DATA LINES
PINPUT:	BLOCK	2	;POINTER TO INPUT LINES
DATLIN:	BLOCK	2	;DATA LINE
DATAFF:	BLOCK	1	;DATA/READ FLG AND FIRST DATA PTR
HPOS:	BLOCK ^D10	;HORIZ POSITION
REGPNT:	BLOCK	1	;POINTER TO SUBEXP IN REG
TMPLOW:	BLOCK	1	;CURRENT TEMP UNPROTECTED. (-1 TO START)
TMPPNT:	BLOCK	1	;CURRENT TMP USED (-1 TO START)
PSHPNT:	BLOCK	1	;COUNTS GENNED "PUSH" INSTS
SEQPNT:	BLOCK	1	;POINTER TO LINBUF DURING RESEQUENCE.
TOPSTG:	BLOCK	1	;HIGHEST UNMOVEABLE(STODGY)ROLL
SVRBOT:	BLOCK	1	;BOTTOM OF STRING VECTOR POINTER SPACE.
SVRTOP:
ARATOP:	BLOCK	1 	;TOP OF SPACE RESERVED FOR ARRAYS.
FMTPNT:	BLOCK	^D10	;LAST FORMAT CHAR FLAG
STRFLA:	BLOCK	1	;-1 PLUS NUMBER OF STRINGS IN A STATEMENT
VARFRE:	BLOCK	1	;NEXT FREE WORD IN VARIABLE SPACE.
FCNLNK:	BLOCK	1	;LINK IN FCN AND GOSUB CALLS
ELETOP:	BLOCK	1	;UPPER BOUND OF "MAT INPUT"
FUNAME:	BLOCK	1	;IF NZERO, NAME OF MULTI-LINE FN BEING DEFINED
CATFLG:	BLOCK	1	;FLAG AND LOOP COUNTER FOR CAT, XFOR, ETC.
PAKFLG:	BLOCK	1	;FLAG THAT TELLS IF CORE SHOULD BE CRUNCHED.
SJOBSA:	BLOCK	1	;INITIAL LH OF JOBSA.
SJOBRL:	BLOCK	1	;INITIAL JOBREL.
SWAPSS:	BLOCK	1	;0 FOR NON-SWAP SYS, -1 FOR SWAPPING.
CHAFLG:	BLOCK	1	;-1 IF CHAINING, 0 OTHERWISE.

TEMLOC:	BLOCK	1
LETSW:	BLOCK 1
FILNM:	BLOCK 2
IBF:	BLOCK 3
ININI1:	BLOCK 1
DEVICE:	BLOCK 2
UFD:	BLOCK 4
OBF:	BLOCK 3
EXTFG:	Z
LIBFLG:	0
TABFG:	Z
MTIME:	Z
PDP6SW:	Z
FUNSTA:	BLOCK	1	;RHALF HAS LOCATION OF JRST AROUND FUNCTION
			;LHALF SAVES ARGUMENT COUNT IN A MULTILINE FN
FUNLOW:	BLOCK	1	;SAVE VALUE OF TMPLOW DURING MULTILINE FN
LOWSTA:	Z

INTERN	PINPNM
PINPNM:	BLOCK	^D9
INTERN	IFNFLG
IFNFLG:	BLOCK	1

SB1M1:	Z
SB2M1:	Z
TEMP1:	Z
TEMP2:	Z
TEMP3:	Z
INTERN RENSW,DFLGDI,REVFL
RENSW:	Z
DFLGDI:	Z
%HDFKG: DEC     0               ;0 IF OK HEADING, -1 IF NOT
REVFL:	Z
TYI:	BLOCK	3
TYO:	BLOCK	3
TTYBUF:	BLOCK	46
LINB0:	BLOCK <%LOL/5>+1
DRMBUF:	BLOCK	203
VECT1==DRMBUF+2		;TEMP SPACE FOR MAT INVERT
VECT2==DRMBUF+102


LINNUM:	BLOCK	9
TABVAL:	BLOCK ^D10
RUNFLA:	Z		;-1 IF COMPILE OR RUN
OLDFLA:	Z		;ZERO WHEN FILE NAME SHOULD BE NEW, ELSE -1.
RENFLA:	EXP	-1	;-1 ALLOWS REEN;0 PREVENTS REEN;>0 REQUESTS REEN
CURDEV:	Z		;THE DEVICE ASSOCIATED WITH THE "CURRENT" FILE.
CURNAM:	Z		;NAME OF THE "CURRENT" FILE.
CUREXT:	Z		;ITS EXTENSION.
DETER:	Z		;CONTAINS THE DETERMINANT OF LAST MAT INVERTED
NUMRES:	Z		;SET BY MAT INPUT TO NUMBER OF ELEMENTS INPUT
VRANX:	Z		;INDEX STORAGE FOR VRANB
FILUSN:	BLOCK	3	;USER NAME ON FILE ENTRY
FILDIR:	Z
	SIXBIT	/BAS/
	EXP	0,0,0,0
FILD1:	BLOCK	1
	SIXBIT	/BAS/
	EXP	0,0


BINNAM: BLOCK 4
	N=0
	INTERN EX1
EX1:	FSC	N, 0		;SCALE THE RESULTS


OBDSK2:	OUTBUF	0,2
IBDSK2:	INBUF	0,2
IBDSK:	INBUF 0,1
	INTERNAL BADGNN,BADMSG,USETOD,USETID,%HDFKG
BADMSG:	ASCII /MISSING LINE NUMBER FOLLOWING LINE /
BADGNN:	0
	BLOCK	1
CRLFMS:	ASCIZ/
/
	INTERN CRLFMS,IBDSK,INNDSK,OUTTDS,IBDSK2,OBDSK2
	INTERN	IFIFG,ODF,INDSK,INITO,STADSK,STODSK,DREL,CURLIN
	INTERN	ENT,ENTDSK,OUTDSK
	INTERN FILD,ACTBL,LOK,LOKUP,CORN,CORNTO
	INTERN	NUMCOT

NUMCOT:	BLOCK 1
ACTBL:	BLOCK	9
IFIFG:	Z		;INPUT FROM DSK (IF NOT ZERO)
ODF:	Z
CORN:	Z
CORNTO: Z
OUTDSK:	OUTPUT	0,
OUTTDS:	OUT	0,
STODSK:	STATO	0,740000
STADSK:	STATZ	0,20000
STWDSK:	STATZ	0,400000
STQDSK:	STATZ	0,040000
GTSTS:	GETSTS	0,N
INTERN	CLOSED,RENAMD
CLOSED:	CLOSE	0,
RENAMD:	RENAME	0,LOK
CURLIN:	Z
DREL:	RELEASE	0,
INDSK:	INPUT	0,
INNDSK:	IN	0,
FILD:	BLOCK	9
EXTD:	BLOCK	9
INTERN FUSE
FUSE:   BLOCK ^D18
LOKUP:	LOOKUP	0,LOK
	INTERN OBDSK
OBDSK:	OUTBUF	0,1
ENT:	BLOCK	4
ENTDSK:	ENTER	0,ENT
LOK:	BLOCK	4


	DEFINE	R(A)
<	IRP	A
<	USETO	A,0>>
USETOD:	R<1,2,3,4,5,6,7,8,9>

	DEFINE	R(A)
<	IRP	A
<	USETI	A,0>>
USETID:	R<1,2,3,4,5,6,7,8,9>

	DEFINE	R(A)
<	IRP	A
<	OPEN	^D<A>,OPS'A>>
INITO:	R<1,2,3,4,5,6,7,8,9>


	DEFINE	R(A)
<IRP	A
<OPS'A:	OCT	1
	SIXBIT /DSK/
	XWD	DO'A,DI'A
	INTERN	OPS'A>>

R<1,2,3,4,5,6,7,8,9>

INTERN BA
MASAPP:	BLOCK	^D47
SRTDBA:	BLOCK	9
BA:	BLOCK	9

	DEFINE	R(A)
<	IRP	A
<LINB'A:	BLOCK	<%LOL/5>+1
	INTERN	LINB'A	>>

	R<1,2,3,4,5,6,7,8,9>


	DEFINE	R(A)
<	IRP	A
<DO'A:	BLOCK	3
DI'A:	BLOCK	3
	INTERN	DO'A,DI'A	>>

	R<1,2,3,4,5,6,7,8,9>
        EXTERNAL %CMDCEI,%CMDFLO,%TRPMSG
	SEXTERNAL	CMDCEI,CMDFLO,DECCEI,DECFLO,IFNCEI,IFNFLO
	SEXTERNAL	RELCEI,RELFLO,STACEI,STAFLO
        EXTERN  %UUOHAN ;ENTRY VECT. FOR UUO HANDLER
	INTERNAL	UUOH
UUOH:	0
        JRST    @%UUOHAN


	NNN==7
	W==13702175435
	INTERNAL VRANT

DEFINE	.WRAN(NN,WW) <	; ASSEMBLES "WRAN(0)" BASIS.
	DEFINE	.WRAN1 <
	REPEAT 6, <
	%Q==<%A>B<35+25>
	%Q==<%A ! %Q> & <-1-<%A & %Q>>
	%A==<%A>B<35-6> ! <%Q & 77> >
	EXP	%A >
	%A==WW
	REPEAT NN, <
	.WRAN1 >>


VRANT:	.WRAN(NNN,W)
SPEC:	EXP	1
NEWOL1:	SIXBIT	/DSK/
	EXP	TYI
	INTERNAL	NEWOL1,SPEC

	INTERNAL	WEAVI,WEAV
WEAVI:	OCT 1
WEAV:	SIXBIT	/DSK/
	EXP	TYI
	INTERNAL SAVE1,SAVI
SAVI:	OCT 1
SAVE1:	SIXBIT	/DSK/
	XWD	TYO,
	INTERNAL	ARAROL ,ARATOP ,ARGROL ,C3 ,CADROL ,CEIL ,CMDROL ,CODROL 
	INTERNAL	COMTOP,CONROL ,CURDEV ,CUREXT ,CURNAM ,DATAFF ,DATLIN ,DECROL 
	INTERNAL	DETER ,DRMBUF ,ELETOP ,ES2 ,FADROL ,FCLROL ,FCNLNK ,FCNROL 
	INTERNAL	FILDIR ,FLOOR ,FMTPNT ,FORROL ,FRSTLN ,FUNAME ,FUNLOW ,FUNSTA 
	INTERNAL	GSBROL ,HPOS ,IFNROL ,INPFLA,FILD1,STWDSK,STQDSK
	INTERNAL	LADROL ,LASTLN ,LINB0 ,LINROL ,LITROL,SLTROL 
	INTERNAL	LOWEST ,LOWSTA ,LZ ,MINFLG ,NUMRES ,NXTROL 
	INTERNAL	OLDFLA ,ONCESW ,PAKFLA ,PINPUT ,PIVOT ,PLIST ,PREAD ,PSHPNT 
	INTERNAL	PSHROL,PTMROL ,REGPNT ,RELROL ,RENFLA ,ROLMSK ,ROLTOP ,RUNFLA 
	INTERNAL	SADROL ,SB1M1 ,SB2M1 ,SCAROL ,SEQPNT ,SEXROL ,STAROL ,STMROL 
	INTERNAL	STRFLA ,SVRBOT ,SVRROL ,SVRTOP ,SX ,TABVAL ,TEMP1 ,TEMP2 
	INTERNAL	TEMP3 ,TMPLOW ,TMPPNT ,TMPROL ,TOPSTG ,TTYBUF ,TXTROL
	INTERNAL	TYO ,VARFRE ,VARROL ,VECT1 ,VECT2 ,VPAKFL ,VRANX 
	INTERNAL	VSPROL ,TYI

APPLST:			;APPLST IS RUNTIME, QLSPEC IS COMMAND TIME.
QLSPEC:	XWD	16
	BLOCK	^D20

SEXTERN TRPMSG
TRPLOC:	XWD	4,TRPMSG
	400000000001
	Z
	Z
DEFINE ROLLS <
X TXT
X LIN

X COD
X CON
X SLT
X LIT
X ARA
X SVR
X GSB
X SCA
X VSP
X PTM
X TMP

X STM
X VAR
X SEX
X ARG
X REF
X FCN
X FCL
X FAD
X CAD
X LAD
X SAD
X FOR
X NXT
>
	PSHROL==200000	;ADDRESS ASSOCIATED WITH THIS
			;PHANTOM ROLL ARE ABSOLUTE, INDEXED BY (P)
DEFINE TBLS <
X CMD
X STA
X DEC
X REL
X IFN
>

ZZ.==0
DEFINE X(A)
<A'ROL==ZZ.
ZZ.==ZZ.+1
>
	TBLS
ROLLS
ROLTOP==ZZ.-1

FLOOR:
DEFINE X(A)
<EXP A'FLO>
TBLS

DEFINE X(A)
<Z>

	ROLLS

CEIL:
DEFINE X(A)
<EXP A'CEI>
TBLS

DEFINE X(A)
<Z>

	ROLLS

COMBOT==VARROL		;BOTTOM COMPILE ROLL AFTER CODROL
COMTOP==NXTROL		;TOP COMPILE ROLL.

ONCESW:	EXP	-1	;ONCE-ONLY SWITCH FOR START
			;AFTERWARDS, THE CONSTANT ZERO.
PAKFLA:	Z		;-1 IF TEXT IS NOT PACKED
VPAKFL:	Z		;-1 IF VARIABLE SPACE PACKED.
INPFLA:	Z		;NON-ZERO DURING INPUT,ZERO DURING READ

;TEMPORARY STORAGE FOR RUN-TIME IFN SUBS

PIVOT: ES2: C3:	BLOCK	1
SX: LZ:	BLOCK	1

PLIST:	XWD	-200,.
	BLOCK	200

	INTERN	QLIST
QLIST:	XWD	-100,.
	BLOCK	100

EXTERN JOBSA,JOBREL,JOBFF,JOBREN,JOBOPC

MINFLG==400000	;MINUS FLAG IN LEFT HALF OF EXPR PNTR
ROLMSK==377777	;ROLL NUMBER MASK IN SAME

SUBTTL	LITERALS
	DEFINE IMP(A)
<	CE'A==CEIL+A'ROL
	FL'A==FLOOR+A'ROL
	INTERN	CE'A,FL'A	>
	IMP	SVR
	IMP	SLT
	IMP	LIT
	IMP	SCA
	IMP	ARA
	IMP	STM
	IMP	PTM
	IMP	LAD
	IMP	GSB
	IMP	FOR
	IMP	FCL
	IMP	CAD
	IMP	ARG
	IMP	REF
	IMP	COD
	IMP	SEX
	IMP	SAD
	IMP	NXT
	IMP	LIN
	IMP	CON
	IMP	VSP
	IMP	TXT
	IMP	TMP
        INTERN EXTDFG,EXTDF1
	END

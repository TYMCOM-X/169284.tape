TITLE FILE RESEQUENSER
SUBTTL 
	MLON
	LEVEL==0	;SPECIAL PURPOSE FLAG REGISTER
	;
	;FLAG (RH) 7LEVEL'
	CONSEQ==1
	MAKSEQ==2
	OKSEQ==4
	RECOVR==10		;=1 WHEN IN LINE SEQ # RECOVERY MODE
				; HAPPENS WHEN A BAD SEQ # DETECTED
	RESCON==20		;=1 IN RESEQ MODE

;
;
	DEFINE FLUSH (LOC,SIZE)
	<SETZM LOC
	 MOVE T1,[XWD LOC,LOC+1]
	 BLT T1,LOC+^D<SIZE>-1
	>
;
;
T1==1
T2==2
T3==3
T4==4
FLAG==5
FL==FLAG
CH==6
IOPNT==7
CP==10
P==11
OFLAG==12
MSGPNT==13
SIXTXT==14
ORDPNT==15
	COMWRD=16
;
;	MODE CODES
;
	NORMAL=0
	FORCED=1
	RESEQ=2			; SET WHEN IN RESEQUENCE MODE
;
;
; SYSTEM CODE NUMBERS FROM SUDS.
	FORTRAN=0
	BASIC=2
	MACRO=3
;
	ICHN==14
	OCHN==13
BEGIN:	SETZB	LEVEL,FLAG 		;SET FLAG REQ'S TO 0
	CALLI	0
	MOVE	P,[XWD -^D10,PDL]
;
	MOVE	T1,[XWD 1,RESWRD]	;READ INCORE COMMAND DATA
	CALL	T1,[SIXBIT .TMPCOR.]
	HALT
;
JOBCON:	CALL	1,[SIXBIT .PJOB.]
	MOVEI	4,3
	IDIVI	1,^D10
	ADDI	2,"0"-40
	LSHC	2,-6
	SOJG	4,.-3
	HLLM	3,OFILE
;
	MOVE 3,IFILE+3
        MOVEM 3,SAVPPN
        MOVE 3,IFILE+4
        MOVEM 3,SAVPPN+1
        SKIPN SAVPPN
        JRST .+3
        MOVEI 3,SAVPPN
        MOVEM 3,IFILE+3
        SETZM IFILE+4
	MOVE 3,RDAT
	SKIPE RDAT
	MOVEM 3,.+2
	INIT	ICHN,0		;INIT INPUT CHANNAL
	SIXBIT	/DSK/
	XWD	,IBUF
	HALT
	INIT	OCHN,10		;INIT OUTPUT CHANNAL
	SIXBIT	.DSK.
	XWD	OBUF,
	HALT
	INBUF	ICHN,^D5
	OUTBUF	OCHN,^D5
	LOOKUP	ICHN,IFILE	;LINK TO INPUT FILE
	JRST	NOTFND		;EITHER NOT FOUND OR BUSY FILE
	ENTER	OCHN,OFILE	;LINK TO OUTPUT FILE
	JRST	ENTERR		;  ?? SHOULDNT HAPPEN
	PUSHJ	P,BUFOUT	;FIRST OUTPUT TO INIT BUFFER AREA
	IN	ICHN,		;GET FIRST BUFFER IN TO PRESCAN
	JRST	.+2		; NO ERRORS JUST CONTINUE
	JRST	EOF		;FIND OUT WHAT HAPPENED.
;
	SKIPE	T1,SEQINC	;IF INC IS 0 PROVIDE INC OF 10
	JRST	.+3
	MOVEI	T1,^D10
	MOVEM	T1,SEQINC
;
	;MODE CHECK
;
	HLRZ 17,MODE	;GET SYS NO.
	HRRZ	T1,MODE		;GET MODE VALUE
	CAIN	T1,FORCED	;WANT TO FORCE CREATION OF SEQ NUMBERS?
	JRST	[TRO LEVEL,MAKSEQ
		 TTCALL 3,[ASCIZ /FILE BEING SEQUENCED..

/]
	SETZM FRSTSEQ
	SETZM ORDERF
		 JRST XFERA]	;YES
	CAIN	T1,NORMAL	;NORMAL PRESCAN CHECK MODE
	JRST	PRESCAN		;YES
	CAIE	T1,RESEQ	;RESEQUENCE MODE?
	HALT				; SOMETHING WRONG
	TRO	LEVEL,RESCON	;SET RESEQUENCING FLAG
	;
;
;

PRESCAN:	PUSH	P,IBUF+1	;SAVE POINTER/RESTORE AFTER PRESCAN
	PUSH P,IBUF+2
	MOVE	T1,IBUF+1
	MOVE	T1,1(T1)	;GET FIRST WORD IN BUFFER.
	TRNE	T1,1		;IS THIS A LINED FORMATED FILE(SEQ BIT=1)
	JRST	[TRO LEVEL,OKSEQ
		 JRST XFER]
	PUSHJ	P,NUMCHK	;SEE IF FIRST THING ON LINE IS A NUMBER
	;
NOTNUM:	TROA	LEVEL,MAKSEQ	;SETUP TO MAKE SEQ NUMBERS
AWAY:	TRO	LEVEL,CONSEQ	;SETUP TO CONVERT SEQ NUMBERS
	TRNE	LEVEL,MAKSEQ
	TTCALL	3,[ASCIZ /FILE BEING SEQUENCED..

/]
	JRST	XFER
;
NUMCHK:	PUSHJ	P,DECOD		;GET THE FIRST DELIMETED STRING
				;IS IT A NUMBER (5 DIGITS ONLY MAX)
	TDNE	COMWRD,[OCT 404040404077]	;PRECHK FOR LETTERS
	JRST	NUMX		;IF ANY OF THOSE BITS ARE SET ITS 
				;DEFFINITELY NOT A NUMBER
	MOVE	T3,[SIXBIT .000000.]
	MOVE	T4,COMWRD	; NOW REALLY PICK AT IT.
	LSHC	T3,6		; FILL REST OF WORD WITH SIXBIT '0'S
	JUMPN	T4,.-1
	CAML	T3,[SIXBIT .000000.]	;WORD < SIXBIT .000000.
	CAMLE	T3,[SIXBIT .999999.]	; OR >= 999999
NUMX:	POPJ	P,		;NOT A NUMBER RETURN
	AOS	(P)
	POPJ	P,		;IS A NUMBER RETURN
;
XFER:	POP P,IBUF+2
	POP	P,IBUF+1	;RESTORE INPUT BYTE POINTER
XFERA:	TRNN	LEVEL,OKSEQ	;FILE ALREADY STRUCTURED
	JRST	[TRNN LEVEL,CONSEQ
		JRST	MSEQ
		JRST	CSEQ]
NOCONV:	JRST	CSEQ	;***MAY CHANGE LATER!!
MSEQ:	SKIPE	FRSTSEQ		;IF FRSTSEQ = 0 MAKE IT 100
	JRST	.+3
	MOVEI	T1,^D100
	MOVEM	T1,FRSTSEQ
	MOVE	T1,FRSTSEQ	;GET FIRST/LAST SEQ NUMBER 
	CAILE	T1,^D99999		;NOT TO BE > 99999
	JRST	XFORM2		;NUMBER TO BIG
	PUSHJ	P,RADCON	;CONVERT NUMBER TO 5 DIGITS ASCII
	MOVE	T1,FRSTSEQ	;GET CURRENT SEQ NUMBER
	ADD	T1,SEQINC	;ADD INCREMENT
	MOVEM	T1,FRSTSEQ	;SAVE NEW SEQ NUMBER
	JRST	GENS1
;	CONVERT THE BINARY VALUE IN (T1) 
;	TO AN ASCII LINE NUMBER IN SUDS (5 DIGITS)
; 	LINE NUMBER IS PLACED IN 'XILB' WITH BIT 35=1
;
CSEQ:
XFORM:	SETZM	T1		;ZAPP ACCUM
XFORM1:	PUSHJ P,GETCHR
	CAIL CH ,"0"
	CAILE CH,"9"
	JRST XFORM0
	SUBI CH,"0"
	IMULI T1,^D10
	ADD T1,CH
	JRST XFORM1
XFORM0:	CAIN 17,2
	JRST BASF1

	CAIN	CH,14			;IGNORE TECO TYPE FORM FEEDS!
	JRST	XFORM1
	MOVEM	CH,SIXTXT		;SAVE THIS TERMINATOR IN CASE ITS NEEDED
XFORM4:	TRNE	LEVEL,RESCON		; IN RESQUENCE MODE?
	PUSHJ	P,RESCODE		; YES..
	TRNN	FLAG,RECOVR		;IN RECOVERY MODE?
	JRST	XFORMN		;NO CONTINUE NORMAL PROCESSING
	CAMN	T1,FRSTSEQ	; YES..IS THIS NEXT SEQ = LAST CONVERTED?
	ADDI	T1,1		; YES .. TRY TO MAKE THIS NEW ONE UNIQUE!
XFORMN:	CAILE	T1,^D99999		;IF > 99999 SIGHT ERROR
	JRST	XFORML		;# TOO LARGE OR NOT A NUMBER AT ALL
	JUMPN T1,XFORMR
	CAIE CH,"0"	;IF CH=0 AND T1=0 ;IT'S OK
	JRST XFORMX
XFORMR:	SKIPN FRSTSEQ
	JRST .+3
	CAMG T1,FRSTSEQ
	SETOM ORDERF
	MOVEM	T1,FRSTSEQ	;SAVE SEQ # AS LAST # USED
	PUSHJ	P,RADCON		;MAKE SUDS SEQ NUMBER
	JRST	GENS1
BASF1:	CAIE CH,15
	CAIN CH,12
	SKIPA
	JRST XFORM0+2
	SETZ T1,
	JRST XFORM1
XFORM2:	TTCALL	3,[ASCIZ .LINE NUMBER OUT OF RANGE
.]
	JRST	ERROUT
;
XFORMX:	TRNE	LEVEL,OKSEQ	;IF THIS FILE HAS SUDS SEQ # TRY 
	JRST	RCOV		;TO RECOVER FROM THIS BAD LINE.
				; OTHERWISE JUST RES ENTIRE FILE
	SETZM	LEVEL	;CLEAR FLAGS
	TRO	LEVEL,MAKSEQ
	MOVEI	T1,1		;SET FORCED MODE
	HRRM	T1,MODE
	CALLI	0		;RESET ANY I/O CHANNALS
	SETZM	FRSTSEQ		;REFRESH STARTING SEQ NUMBER LOCATION
	MOVE T1,SAVENO
	MOVEM T1,IFILE+3
	JRST	BEGIN+6		;RESTART RESEQUENCING FORCING SEQ #'S
;
XFORML:	TRNE	LEVEL,OKSEQ	;IF OK SEQ IS =1 TRY TO RECOVER
	JRST	RCOV		; THIS IS APARANTLY A BAD FILE
	TTCALL	3,[ASCIZ /UNABLE TO FORMAT THIS FILE FOR SUDS..

/]
	SETZM ORDERF
	JRST	EOF+2
RCOV:	MOVE	T1,FRSTSEQ	;RETREIVE LAST USED SEQ #
	ADDI	T1,1		; TRY TO RECOVER
	TRO	FLAG,RECOVR	;SET IN RECOVERY MODE FLAG
	JRST	XFORMR		;HOPE FOR A SMOOTH RECOVERY
;
;
;	CODE TO RESEQUENCE PARTS OF A FILE BY SPECIFIED PARAMETERS
	;    STSEQ: = LINE TO START RESEQ. AT
	;    ENDSEQ: = "    "  END    "     "
	;    NEWSEQ: = NEW STARTING LINE NUMBER
	;    SEQINC: = INC COUNT
; CALL		PUSHJ	P,RESCODE
;	ON ENTRY T1 CONTAINS THE BINARY VALUE OF THE CURRENT SEQ #
;
;
RESCODE:	CAMGE	T1,STSEQ	;REACHED BEGINNING OF RANGE?
	POPJ	P,			; NO  RETURN.
	MOVE	T2,NEWSEQ		; GET REPLACING LINE NUMBER
	CAMG	T2,FRSTSEQ		;THIS NEW # GREATER THAN LAST ONE USED
	JRST	CANTSQ
	CAMLE	T1,ENDSEQ		;REACH END OF RANGE?
	JRST	[CAMG T1,NEWSEQ
		 JRST CANTSQ
TRZ LEVEL,RESCON
		 POPJ P,]				;YES..END UP
	MOVE	T1,NEWSEQ		; NO REPLACE C(SEQ#) WITH NEW ONE
	ADD	T2,SEQINC		;MAKE NEXT NUMBER
	MOVEM	T2,NEWSEQ		; AND SAVE IT..
	POPJ	P,		;RETURN..
;
CANTSQ:	TTCALL	3,[ASCIZ /RESEQUENCING ABORTED..
PARAMETERS OUT OF BOUNDS

/]
	JRST	EOF+2
;
;
; RADIX CONVERSION ROUTINE 
; MAKES A SUDS SEQ # AND PUTS IT IN 'XILB'
; PASS BINARY NUMBER IN (T1)
;
RADCON:	PUSH	P,T1
	FLUSH	(XILB,30)
	POP	P,T1
	MOVEI	T3,XILB
	SETOM	(T3)
	HRLI	T3,440700	;SETUP STORE POINTER
	MOVEI	T4,5		;ONLY WANT TO MAKE 5 DIGITS
RADIX:	IDIVI	T1,^D10	;RADIX CONV FACTOR
	HRLM	T2,(P)
	SOSE	T4
	PUSHJ	P,RADIX
	HLRZ	T1,(P)		;RETURN DIGIT
	ADDI	T1,"0"	;MAKE IT ASCII
	IDPB	T1,T3		;PLACE IT
	POPJ	P,
;	FETCH A LINE FROM AN INPUT BUFFER --PUT IT IN 'XILB'
;	FOR A BLT XFER TO OUTPUT BUFFER
;
GENS1:	MOVE	T1,[POINT 7,XILB+1]	;LINE DATA PNTR
	PUSHJ	P,SBLXFR	;SET BLT XFER POINTER
	PUSHJ	P,HEDSET	;DETERMINE FIRST CHAR OF LINE
GENS2:	PUSHJ	P,GETCHR	;GET A LINE CHARACTER
	CAIN	CH,12		;IF <LF> IS ENCOUNTERED BEFORE <CR>
	MOVEI	CH,15		;MAKE IT LOOK LIKE <CR>
	IDPB	CH,T1		;SAVE CHARACTER IN 'XILB'
	ADDI	T2,1	;INC CHAR COUNTER
	CAIE	CH,15		;REACH END OF LINE YET?
	JRST	GENS2	;NO
	MOVE	T4,IBUF+1
	ILDB	CH,T4		;GET THE VERY NEXT CHAR IN INPUT BUFFER
	CAIE	CH,12		;IS IT A <LF>
	SKIPN	CH,.-1		;NO SO FORSE IT TO BE A <LF>
	PUSHJ	P,GETCHR	;GET RID OF <LF>POINTER IF IT WASNT FORSED
	IDPB	CH,T1		;SAVE <LF> IN LINE BUFFER(XILB)
	ADDI	T2,1		;ACCOUNT FOR IT
	PUSHJ	P,SBLX2		;CALCULATE XFER WORD COUNT
BUF0:	PUSHJ	P,BUFROM	;ENOUGH ROOM TO PUT NXT LINE IN BUF
BUFFIL:	MOVE	T3,BLTPNT	;SETUP POINTER
	SUBI	T2,1
	XCT	XFR	;PLACE NEW LINE IN OUTPUT BUFFER
	JRST	XFERA		;DO NEXT LINE...
;
;
EOF:	CLOSE 	ICHN,0
	CLOSE 	OCHN,0
	SKIPE ORDERF
	JRST ORDER
        CALLI 1,12      ;GOOBUY
ORDER:	HRRZI 1,ORDERP
	CALLI 1,35
	HALT
ORDERP:	SIXBIT/SYS/
	SIXBIT/ORDER/
	0
	0
	0
	0
SUDSTR:	SIXBIT .SYS.
	SIXBIT .SUDS.
	0
	0
	0
	0
;
;
;
;
;	SETUP BLT XFER WORDS TO   MOVE 'XILB' TO OUTPUT BUFFER
;
SBLXFR:	MOVE	T4,OBUF+1	;GET CURRENT WORD POINTER
	ADDI	T4,1		;NEED TO IN BY 1
	HRRM	T4,BLTPNT	;SAVE IT IN THE BLT FUTURE REG
	HRRM	T4,XFR		;AND IN THE BLT INST.
	SETZM	T2		;CLEAR THE WORD COUNTER
	POPJ	P,
;
;
SBLX2:	IDIVI	T2,5	;MAKE THE WORD TRANSFER COUNT
	SKIPE	T3
	ADDI	T2,1		;IF NOT A FULL WORD ADD 1
	ADDI	T2,1		;AND ADD 1 FOR SEQ #
	POPJ	P,		;RETURN
;
;
BUFROM:	LDB	T1,SPNTR	;GET CURRENT BUFFER SIZE
	CAMG	T1,T2		;ANY ROOM LEFT FOR THIS NEW LINE
	JRST	[MOVEI T4,201
		 HRLM T4,@OBUF
		 PUSHJ	P,BUFOUT	;NO ..MOVE TO NEXT BUFFER /OUTPUT CURRENT
	POP	P,PDL		;GET RID OF HIDDEN RETURN ADDRESS-ITS NOT NEEDED
	JRST	BUFR1]
	SUB	T1,T2		;REDUCE CURRENT BUFFER SIZE
	ADDM	T2,OBUF+1	;AND AND INC POINTERTO POINT TO NEXT SPACE
	DPB	T1,SPNTR	;SAVE SPACE STILL AVAILABLE IN (C)BUFFER
	POPJ	P,		;RETURN
BUFR1:	PUSH	P,T2		;SAVE T2   [WRD COUNT]
	PUSHJ	P,SBLXFR			;RESET POINTERS FOR XFER
	POP	P,T2
	JRST	BUF0
;	DECIDE WHAT THE FIRST CHAR OF THE LINE SHOULD BE
;
HEDSET:	MOVEI	CH," " 		;
	TRNN	LEVEL,MAKSEQ	;IN MAKING MODE LEAVE THE BLANK CHAR
	PUSHJ P,HEDS1
	AOS	(P)		;INC RETURN ADDRESS
	POPJ	P,

HEDS1:	MOVE CH ,SIXTXT
	CAIE CH," "
	CAIN CH,"	"
	POPJ P,	;IT WAS A BLANK OR TAB
	CAIE CH,15	;CR?
	CAIN CH,12	;A LINEFEED
	POPJ P,	;YES LET GENS2 TAKE CARE OF IT
	CAIN 17,2
	JRST BAS2
HEDS2:	MOVEI CH," "	;GET A BLANK
	IDPB CH,T1	;DEPOSIT IT
	AOJ T2,	;ADD TO COUNT
	MOVE CH,SIXTXT	;GET THE FIRST CHAR BACK
	POPJ P,
BAS2:	CAIN CH,"D"
	SKIPA	;YES A D
	JRST HEDS2
	MOVE T4,IBUF+1	;GET POINTER
	ILDB CH,T4
	CAIE CH,"I"	;BEGINNING OF DIMENSION?
	CAIN CH,"A"	;IS IT AN A WHICH IMPLIES DATA STATEMENT
	JRST HEDS2	;YES SO DON'T PUT TAB PUT A SPACE
	CAIN CH,"="
	JRST HEDS2
	MOVEI CH,"	"	;PUT I N A TA! IOSTEAD
	POPJ P,	;DON'T PUT IN THE "D"
;CHARACTER INPUT ROUTINE
;
GETCHR:	SOSGE	IBUF+2
	JRST	GETBUF
GETNXT:	ILDB	CH,IBUF+1
	CAIL	CH,40		;GET RID OF ALL UNWANTED CHARACTERS
	POPJ	P,		; CH IS > THAN 40
	CAIGE	CH,16		;  16>=CH>=37
	CAIG	CH,10		;  0>=CH>=10
	JRST	GETCHR		; SATISFIED 1 OF ABOVE 2
	CAIG	CH,14		;  IS CH 13 OR 14?
	CAIG	CH,12
	POPJ	P,
	JRST	GETCHR		; YES IT WAS 13 OR 14
	POPJ	P,
GETBUF:	IN	ICHN,
	JRST GETNXT
	STATZ	ICHN,740000
	JRST	INERR
	JRST	EOF
;
;
;	OUTPUT BUFFER ROUTINE
;
BUFOUT:	OUT	OCHN,
	POPJ	P,
	STATZ	OCHN,740000
	HALT
	POPJ	P,
DECOD:	MOVE	T2,[POINT 6,COMWRD]
	SETZB	T3,COMWRD
DEC1:	ILDB	CH,IBUF+1
	CAIN 17,2	;BASIC?
	JRST BASFIL	;AH HA 
	CAIN	CH,12		;IS IT A LF
	POPJ	P,
	CAIN	CH,15		;IS IT A <CR>
	POPJ	P,
	CAIN	CH," "		;IS IT A BLANK?
	JRST	BLANK
	CAIN	CH,11		;IS IT A ^I(TAB)
	POPJ	P,
DEC2:	TLNN	T2,770000	;SIX IN YET?
	POPJ	P,	;YES
	SUBI	CH,40
	IDPB	CH,T2
	SETOM	T3
	JRST	DEC1
BLANK:	SKIPL	T3
	JRST	DEC1
	POPJ	P,
BASFIL:	CAIE CH, 12	;LF?
	CAIN CH,15	;OR CR?
	JRST BLANK	;YES GO SEE IF BEFORE OR AFTER NUMB
	CAIN CH," "	;BLANK?
	JRST BLANK	;YUP
	CAIE CH,11	;TAB?
	CAIN CH,"D"	;OR D?
	POPJ P,	;YES MA'AM
	CAIG CH,57	;>=0
	POPJ P,	;NO
	CAIL CH,72	;<=9
	POPJ P,
	JRST DEC2	;IT'S A NUMERO
;	DATA SECTION
;
;
SAVENO: BLOCK 1
BLTPNT:	XWD	XILB,0		; POINTER TO XFER 'XILB' TO OUTBUFFER
SPNTR:	POINT 17,@OBUF,17		;BUFFER SIZE POINTER
XFR:	BLT	T3,0(T2)	;INST TO XXFER 'XILB'
PDL:	BLOCK	^D10
RESWRD:	SIXBIT .RES.
	IOWD ^D12,RDAT
RDAT:BLOCK 1
IFILE:	BLOCK 5
SYSTEM: MODE: XWD 0,0
FRSTSEQ:	0		;LAST SEQ # CONVERTED 
STSEQ:	0			;SEQ # TO START REESEQUENCING AT
ENDSEQ:	0			; "  " "   END    "           "
SEQINC:	0			; SEQ # INCREMENT COUNT
NEWSEQ:	0			; NEW STARTING SEQUENCE NUMBER
OFILE:	SIXBIT	.###SRC.
	SIXBIT .TMP.
	BLOCK	2
NOTFND:	HALT
ENTERR:	HALT
INERR:	HALT
ERROUT:	HALT
SAVPPN: BLOCK 2
ORDERF:0
IBUF:	BLOCK	3
OBUF:	BLOCK	3
XILB:	BLOCK	^D30
	END BEGIN
    
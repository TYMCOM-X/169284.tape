C
C  PROGRAM CPCONV; SUBROUTINE SCANTM; SUBROUTINE CPCERR
C
C
C
C ***********************************************************
C           THIS PROGRAM IS PART OF THE COMPAC-10 SYSTEM
C ***********************************************************
C 
C ****************** MAINTENANCE RECORD *********************
C ADD A COMMENT LINE WITH YOUR NAME AND DATE IF YOU CHANGE THIS CODE.
C (USE EDITOR "INSERT" BEFORE LINE ADDRESSED BY :C*: .)
C !!!!!!!!!! UPDATE COMPAC-10 IMPLEMENTATION SPECS!!!!!!!!!!
C 
C (AUTHOR) SAM COHEN    5/17/73         VERSION         000001 000000
C*
C ***********************************************************
C
C
        IMPLICIT INTEGER (A-Z)
        DIMENSION LXTIDX(512)
C
C
        COMMON/CPLIST/LIST(20) /CPLIDX/LSTIDX(0/4)
C
C
        COMMON/CPGLOB/ KURSOR, LINSIZ, NATCH, INLINE(270), ISTTY,
     1          HUSH, UNCOLA, IPROMP, IDFILE(5)
        LOGICAL  ISTTY, HUSH, UNCOLA, FETCHL, LOOKFN, KANDO,L
C
C
C
C
        ASSIGN 210 TO LSWTCH
        IDUNIT = 1
C
100     CALL CPINIT
C DO NOT WANT KEYWORD DICTIONARY ECHOED ON TERMINAL, SO:
        HUSH=.TRUE.
200     GO TO LSWTCH
210     TYPE 201
201     FORMAT(' ENTER BLOCK-DATA OUTPUT FILE-ID (MAX 5 CHR FNAME): '$)
        GO TO 300
220     TYPE 202
202     FORMAT(' ENTER COMMON-STATEMENT OUTPUT FILE-ID (MAX 5 CHR): '$)
300     IF(.NOT. FETCHL(NOARGS)) GO TO 200
400     IF(LOOKFN(NOARGS)) GO TO 410
        TYPE 401
401     FORMAT('+INVALID FILENAME.',/)
        GO TO 200
410     GO TO (430,420,420,420,420,440,423,421,422,423,423),IOTEST(0)
421     TYPE 9421
9421    FORMAT('+INVALID USERNAME.',/)
        GO TO 200
422     TYPE 9422
9422    FORMAT('+FILE BUSY.',/)
        GO TO 200
420     TYPE 9420
9420    FORMAT ('+FILE PROTECTED.',/)
        GO TO 200
423     TYPE 9423
9423    FORMAT('+SYSTEM ERROR.',/)
        GO TO 200
C
430     TYPE 9430
9430    FORMAT(' NEW FILE - OK? '$)
        IF (.NOT. FETCHL(0)) GO TO 430
        IF(NOWCH(4,K) .NE. 5HY    ) GO TO 200
        GO TO 450
C
440     TYPE 9440
9440    FORMAT(' EXISTING FILE - OK? '$)
        IF (.NOT. FETCHL(0)) GO TO 440
        IF(NOWCH(4,K) .NE. 5HY    ) GO TO 200
C
450     OPEN(IDUNIT,IDFILE,OUTPUT)
C
C
        IF (IDUNIT .EQ. 2) GO TO 800
        IDUNIT=2
        ASSIGN 220 TO LSWTCH
        GO TO 200
C
C
C
C AT THIS POINT BOTH OUTPUT FILES HAVE BEEN OPENED; THE BLOCK DATA
C FILE IS UNIT 1, AND THE COMMON STATEMENT IS UNIT 2.
C
C
C
800     TYPE 801
801     FORMAT(' ENTER NAME OF KEYWORD DICTIONARY (INPUT) FILE,'/
     +  ' FOLLOWED BY TWO CARRIAGE RETURNS: ',$)
900     IF(.NOT.FETCHL(0)) GO TO 800
1000    IF(LOOKFN(0)) GO TO 1010
        TYPE 1001
1001    FORMAT(' INVALID FILENAME.' )
        GO TO 800
C
C NOW HAVE VALID FILENAME; BEGIN CODE TO INSERT "." IF NO
C EXTENSION IS SPECIFIED, SO THAT CPDO CAN BE CALLED WITHOUT 
C INSERTING THE NORMAL ".CMD" DEFAULT EXTENSION.
C
1010    KURSAV=KURSOR
        DO 1020 I=1,250
        J=LASTCH(8,KANDO)
        IF((.NOT.KANDO).OR.(J .EQ. 5H)    )) GO TO 1030
        IF (J .EQ. 5H.    ) GO TO 1100
1020    CONTINUE
1030    INLINE(KURSAV)="56
        INLINE(KURSAV+1)=0
C
1100    KURSOR=1
        CALL CPDO(0)
C
C IF INPUT FILE IS OPEN, ISTTY SHOULD BE .FALSE.
        IF(ISTTY) GO TO 800
C
C NEED EXTRA C.R. IN TTY INPUT BUFFER TO SATISFY FETCHL
C (SEE FETCHL SPECS)... ELSE FETCHL WILL WAIT FOR ENTRY
        TYPE 1151
1151    FORMAT(' NOW PROCESSING... ',$)
C
1200    DTERM=-1
        DMATCH=-1
C
C
1300    WRITE (1,1301)
1301    FORMAT(8X,'BLOCK DATA',/,8X,'COMMON/CPLIST/LIST(1/1)',
     +  /,8X,'COMMON/CPLIDX/LSTIDX(0/1)')
C
1310    L=FETCHL(0)
        IF(ISTTY) CALL CPCERR(1)
        IF(.NOT. L) GO TO 1310
C PARSE FOR !DICTIONARY LINE.
        IF (NOWCH(4,K) .NE. 5H!    ) CALL CPCERR(2)
        KURSOR=KURSOR+1
        IF (LPARSE(1) .NE. 1) CALL CPCERR(2)
C NOW RECOGNIZED "!DICTIONARY"
        IF (NOWCH(4,KANDO) .NE. 5H!    ) GO TO 1320
        KURSOR=KURSOR+1
        CALL SCANTM(DTERM,DMATCH)
        GO TO 1390
1320    IF(KANDO) CALL CPCERR(12)
1390    LCNT=0
        JINDEX=1
C "!DICTIONARY" LINE NOW PROCESSED.
C
C
C
C READ IN A LINE.
1400    L=FETCHL(0)
        IF(ISTTY) GO TO 1800
        IF(.NOT. L) GO TO 1400
C NOW HAVE A NON-EMPTY LINE; CHECK FOR "!LIST".
1500    IF (NOWCH(4,KANDO) .NE. 5H!    ) GO TO 1700
        KURSOR=KURSOR+1
        IF(LPARSE(1) .NE. 2) CALL CPCERR(13)
C NOW HAVE "!LIST"
C
C
C PROCESS END OF LAST LIST (UNLESS THIS IS THE FIRST).
1600    IF (LCNT .EQ. 0) GO TO 1610
        NATCHN=NATCHN+1
        LXTIDX(LCNT)=LXTIDX(LCNT).OR.(NATCHN*"1000000000).OR.
     +  (TCNT*"1000000)
C PROCESS BEGINNING OF NEW LIST
1610    NATCHN=0
        TCNT=0
        LCNT=LCNT+1
        TYPE 1611, LCNT
1611    FORMAT(/,' LIST ',I3,$)
        LTERM=DTERM
        LMATCH=DMATCH
        IF(LOOKIN(INTGER) .NE. 2) CALL CPCERR(14)
        IF(INTGER .NE. LCNT) CALL CPCERR(14)
        CALL NEXTCH(5,KANDO)
        IF(NOWCH(4,KANDO) .NE. 5H!    ) GO TO 1620
        KURSOR=KURSOR+1
        CALL SCANTM(LTERM,LMATCH)
        GO TO 1650
1620    IF(KANDO) CALL CPCERR(12)
1650    LXTIDX(LCNT)=JINDEX
        GO TO 1400
C FINISHED PROCESSING BEGINNING OF NEW LIST
C
C
C   ***********************************************
C PROCESS KEYWORD DEFINITION LINE.
C
1700    IF (LCNT .EQ. 0) CALL CPCERR(15)
        TCNT=TCNT+1
1710    IF(NEXTCH(4,KANDO) .EQ. 5H!    ) GO TO 1711
        IF(KANDO) GO TO 1710
        CALL CPCERR(16)
1711    KBANG=KURSOR
        KURSOR=KURSOR+1
        IF(LOOKIN(TOKNUM) .NE. 2) CALL CPCERR(17)
        IF ((TOKNUM .LT. 1) .OR. (TOKNUM .GT. 511))  CALL CPCERR(17)
        NATCHN=MAX0(NATCHN,TOKNUM)
        CALL SCANTM (TTERM, TMATCH)
C
1720    KURSOR=1
        CALL NOWCH(1,KANDO)
        KBEGIN=KURSOR
1730    KURSOR=KBANG
        CALL LASTCH(1,KANDO)
        KEND=KURSOR
        NUMCHS=KEND-KBEGIN+1
        IF(NUMCHS .GT. 63) CALL CPCERR(20)
        ITEMSZ=1+ (NUMCHS+4)/5
        INDEX1=JINDEX
        JINDEX=JINDEX+ITEMSZ
        INDEX2=JINDEX-1
C
C
1740    DO 1741 KURSOR=KBEGIN,KEND
1741    INLINE(KURSOR)=NOWCH(8,KANDO)
C
        DO 1742 KURSOR=KEND+1,KEND+4
1742    INLINE(KURSOR)=5H     
C
1750    TERM=TTERM
        IF(TERM.EQ.-1) TERM=LTERM
        IF(TERM.EQ.-1) TERM=DTERM
        IF(TERM.EQ.-1) CALL CPCERR(18)
C
        IF(LMATCH.EQ.0) GO TO 1755
        MATCH=TMATCH
        IF(MATCH.EQ.-1) MATCH=LMATCH
        IF(MATCH.EQ.-1) MATCH=DMATCH
        IF(MATCH.EQ.-1) CALL CPCERR(19)
C
        IF(MATCH.GT.63) MATCH=NUMCHS
        GO TO 1760
C
1755    IF(TMATCH.NE.-1) CALL CPCERR(21)
        MATCH=0
C NOTE THAT CPSORT WILL ADJUST THESE MATCH NUMBERS AT A LATER TIME.
C
1760    DOPEWD=TERM.OR.(ITEMSZ*"100000000).OR.(MATCH*"1000).OR.TOKNUM
C
1770    WRITE (1,1771) INDEX1,INDEX2,DOPEWD
1771    FORMAT(8X,5HDATA(,5HLIST(,5HI),I=,I4,1H,,I4,3H)/",O12)
        WRITE (1,1772)
1772    FORMAT(5X,3H+  ,$)
        KLIM=MIN0(KBEGIN+44,KEND)
        DO 1773 I=KBEGIN,KLIM,5
1773    WRITE (1,1774) (INLINE(J),J=I,I+4)
1774    FORMAT(3H,5H,5A1,$)
        IF(KLIM.EQ.KEND) GO TO 1777
        WRITE (1,1775)
1775    FORMAT (1X)
        WRITE (1,1772)
        DO 1776 I=KBEGIN+45,KEND,5
1776    WRITE (1,1774) (INLINE(J),J=I,I+4)
1777    WRITE (1,1778)
1778    FORMAT (1H/)
        GO TO 1400
C
C
C
C  *******************************************************
C
C
1800    IF((TCNT.EQ.0).OR.(LCNT.EQ.0)) CALL CPCERR(22)
C WRAP UP LAST LIST.
        NATCHN=NATCHN+1
        LXTIDX(LCNT)=LXTIDX(LCNT).OR.(NATCHN*"1000000000).OR.
     +  (TCNT*"1000000)
C
C WRITE 0TH WORD IN LXTIDX.
        LXTIDX(0)=LCNT
C
        DO 1810 I=0,LCNT
1810    WRITE (1,1820) I,LXTIDX(I)
1820    FORMAT(8X,5HDATA ,5HLSTID,2HX(,I3,4H) /",O12,1H/)
        WRITE (1,1830)
1830    FORMAT(8X,3HEND)
C
C WRITE "COMMON" STATEMENT ON UNIT 2.
        KINDEX=JINDEX-1
        WRITE (2,1840) KINDEX,LCNT
1840    FORMAT(8X,'COMMON/CPLIST/LIST(1/',I3,') /CPLIDX/LSTIDX(0/',
     +  I3,')',/)
C
C
        TYPE 1850
1850    FORMAT(/'  *** END OF RUN ***')
        CALL EXIT
        END

        BLOCK DATA
C
        COMMON/CPLIST/LIST(20) /CPLIDX/LSTIDX(0/4)
        DATA (LIST(I), I=1,20) / 
     +  "400300001001, 5HDICTI, 5HONARY,
     +  "400200001002, 5HLIST ,
     +  "400300001001, 5HTERMI, 5HNATOR,
     +  "400200001002, 5HMATCH,
     +  "400200001001, 5HBLANK,
     +  "400200002002, 5HALPHA,
     +  "400200001003, 5HNONAL,
     +  "400200003004, 5HANY  ,
     +  "400200001001, 5HEXACT /
        DATA (LSTIDX(I), I=0,4) /
     +  4,
     +  "003002000001,
     +  "003002000006,
     +  "005004000013,
     +  "002001000023 /
C
        END



        SUBROUTINE SCANTM (TERM, MATCH)
        IMPLICIT INTEGER (A-Z)
C
C SCANS AND PROCESSES TERMINATOR AND MATCH DECLATRATIONS,
C RETURNING VALUES IN THE PARAMETERS.  IF NONE ARE FOUND IN THE 
C SCANNED LINE, THE PARAMS ARE RETURNED = -1.  NOTE: MATCH IS A
C SIMPLE INTEGER VALUE, BUT TERM IS A BINARY CONSTANT IN THE PROPER
C FORMAT FOR 'OR'ING INTO THE DOPE WORD IN LIST, WITHOUT SHIFTING.
C
C
C
        COMMON/CPGLOB/ KURSOR, LINSIZ, NATCH, INLINE(270), ISTTY,
     1          HUSH, UNCOLA, IPROMP, IDFILE(5)
        LOGICAL K
C
        TERM = -1
        MATCH = -1
C
        GO TO (10,20,100,200), (LPARSE(2) +2)
C INVALID STRING FOUND
10      CALL CPCERR (3)
C NULL LINE
20      RETURN
C "TERMINATOR"
100     GO TO (101,105,110,120,130,140,190), (LPARSE(3)+2)
C CHECK FOR QUOTED SPECIAL CHARACTER
101     IF((NOWCH(4,K).NE.5H'    ).AND.(NOWCH(4,K).NE.5H"    ))
     +  CALL CPCERR(4)
        TERM= (NEXTCH(5,K))*"2000000000
        IF(.NOT.K) CALL CPCERR(4)
        CALL NEXTCH(5,KANDO)
        IF((NOWCH(8,K).NE.5H'    ).AND.(NOWCH(8,K).NE.5H"    ))
     +  CALL CPCERR(5)
        GO TO 195
C
C NULL LINE
105     CALL CPCERR(6)
C "BLANK"
110     TERM="400000000000
        GO TO 195
C "ALPHA"
120     TERM="600000000000
        GO TO 195
C "NONAL"
130     TERM="500000000000
        GO TO 195
C "ANY"
140     TERM="700000000000
        GO TO 195
C "A" OR "AN"
190     CALL CPCERR(7)
C
C AFTER TERMINATOR DECLARATION, CHECK FOR NULL OR MATCH DECLARATION.
195     CALL NEXTCH(5,KANDO)
        GO TO (196,197,198,200), (LPARSE(2)+2)
C INVALID ITEM
196     CALL CPCERR(3)
C NULL LINE
197     RETURN
C "TERMINATOR" AGAIN
198     CALL CPCERR(8)
C
C
C "MATCH"
200     GO TO (210,220,230),(LPARSE(4)+2)
C DID NOT FIND "EXACT"; LOOK FOR A NUMBER
210     IF(LOOKIN(MATCH) .NE. 2) CALL CPCERR(9)
C MAKE SURE NOTHING FOLLOWS
211     IF (NOWCH(1,K) .NE. 0) CALL CPCERR(10)
        RETURN
C NOTHING FOLLOWS "MATCH"
220     CALL CPCERR(11)
C "EXACT"... USE SPECIAL VALUE OF 100
230     MATCH = 100
        GO TO 211
        END



        SUBROUTINE CPCERR (KODE)
C
C
        COMMON/CPGLOB/ KURSOR, LINSIZ, NATCH, INLINE(270), ISTTY,
     1          HUSH, UNCOLA, IPROMP, IDFILE(5)
C
C
        GO TO (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,
     +  18,19,20,21,22), KODE
C
1       TYPE 101
        GO TO 900
2       TYPE 102
        GO TO 900
3       TYPE 103
        GO TO 900
4       TYPE 104
        GO TO 900
5       TYPE 105
        GO TO 900
6       TYPE 106
        GO TO 900
7       TYPE 107
        GO TO 900
8       TYPE 108
        GO TO 900
9       TYPE 109
        GO TO 900
10      TYPE 110
        GO TO 900
11      TYPE 111
        GO TO 900
12      TYPE 112
        GO TO 900
13      TYPE 113
        GO TO 900
14      TYPE 114
        GO TO 900
15      TYPE 115
        GO TO 900
16      TYPE 116
        GO TO 900
17      TYPE 117
        GO TO 900
18      TYPE 118
        GO TO 900
19      TYPE 119
        GO TO 900
20      TYPE 120
        GO TO 900
21      TYPE 121
        GO TO 900
22      TYPE 122
        GO TO 900
C
C
101     FORMAT(/' E1: EOF BEFORE 1ST NON-NULL LINE.')
102     FORMAT(/' E2: FIRST LINE NOT "!DICTIONARY".')
103     FORMAT(/' E3: UNRECOGNIZED ITEM IN DECLARATIONS SECTION.')
104     FORMAT(/' E4: UNRECOGNIZED ITEM AFTER "TERMINATOR".')
105     FORMAT(/' E5: QUOTED TERMINATOR NOT A SINGLE CHARACTER.')
106     FORMAT(/' E6: NOTHING FOLLOWS "TERMINATOR".')
107     FORMAT(/' E7: MINIMUM ABBREVIATIONS FOR "ALPHA" AND "ANY" ARE ',
     +  /,'     "AL" AND "ANY", RESPECTIVELY.')
108     FORMAT(/' E8: DUPLICATE TERMINATOR DECLARATIONS.')
109     FORMAT(/' E9: UNRECOGNIZED ITEM AFTER "MATCH".')
110     FORMAT(/' E10: NON-BLANK ITEM FOLLOWS MATCH DECLARATION.')
111     FORMAT(/' E11: NOTHING FOLLOWS "MATCH".')
112     FORMAT(/' E12: MISSING "!" OR INVALID ITEM IN HEADER LINE.')
113     FORMAT(/' E13: MISSING KEYWORD OR EXTRANEOUS "!".')
114     FORMAT(/' E14: MISSING OR UNSEQUENCED LIST NUMBER.')
115     FORMAT(/' E15: "!LIST" HEADER MISSING.')
116     FORMAT(/' E16: MISSING "!" IN KEYWORD DEFINITION LINE.')
117     FORMAT(/' E17: MISSING OR INVALID KEYWORD NUMBER.')
118     FORMAT(/' E18: NO TERMINATOR ASSIGNMENT FOR KEYWORD.')
119     FORMAT(/' E19: NO MATCH ASSIGNMENT FOR KEYWORD.')
120     FORMAT(/' E20: OVER 63 CHARACTERS IN KEYWORD.')
121     FORMAT(/' E21: ATTEMPT TO OVERRIDE "MATCH 0" FEATURE.')
122     FORMAT(/' E22: DICTIONARY OR LIST IS EMPTY.')
C
C
900     TYPE 901
901     FORMAT('     ...LAST LINE PROCESSED:'/)
        DO 910 KURSOR=1,LINSIZ
910     INLINE(KURSOR)=NOWCH(8,K)
        TYPE 920, (INLINE(I),I=1,LINSIZ)
920     FORMAT(1X,270A1,/)
        TYPE 930
930     FORMAT(/'  *** RUN ABORTED ***',/)
        CALL EXIT
        END
 
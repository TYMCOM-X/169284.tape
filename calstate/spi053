      SUBROUTINE SETUP
C
        DOUBLE PRECISION MODNAM,MNAME,NAME
C
      COMMON NODPLC(800),YNL(2001),TSTORE(2001),TRACUR(1700),VN(401), 
     1   VNIM1(401),IORDER(401),IUR(402),IUC(800),MATLOC(1800)
      COMMON/INDATA/NUMEL,NUNODS,NUMNOD,NOSTOP,JELCNT(20),LOCATE(21), 
     1   ICURNT(21),JUNODE(401),NAME(200),LOCAL(200),MNAME(200)
      COMMON/MISCEL/NOGO,IGOOF,NOPRNT,IACCT,JOBNAM(16),IDI,IDO
      COMMON/STATUS/MODE,OMEGA,TIME,DELTA,DELOLD,ICALC
      COMMON/POINTS/IUS,ILS,MIRROR,NSTOP,NUMVS,LASTUT,LASTLT
        COMMON/STAT/IOPS,PERSPA
        COMMON/ERROR/IERCHK,IDCCHK,IACCHK,ITRCHK,ISECHK,IOUTCHK,
     +  IERINP,IANLYZE,KSETUP
C 
C 
      DIMENSION JMNODE(1),NPLCSAV(1)
        EQUIVALENCE(NPLCSAV(1),TSTORE(801))
      EQUIVALENCE (JMNODE(1),VN(1))
      DIMENSION ITROW(1)
      EQUIVALENCE (ITROW(1),YNL(1))
C 
C  INITIALIZE, ORDER GROUND NODE LAST 
C 
        IF(JELCNT(3).EQ.0.OR.MODE.NE.1)GO TO 8
        IF(KSETUP.EQ.2)GO TO 4
        DO 2 I=1,800
2       NPLCSAV(I)=NODPLC(I)
        KSETUP=2
        GO TO 8
4       DO 6 I=1,800
6       NODPLC(I)=NPLCSAV(I)
8     IGOOF=0 
      DO 10 I=1,NUMNOD
      IUR(I)=0
   10 JMNODE(I)=0 
      JMNODE(1)=NUMNOD
      IORDER(NUMNOD)=1
      NEXNOD=NUMNOD-1 
C 
C  DETERMINE ORDER IN WHICH SOURCES (AND INDUCTORS IN DC ANALYSIS)
C  MUST BE LOADED 
C 
      NUMVS=JELCNT(6) 
      IF (MODE.GT.1) GO TO 20 
      NUMVS=NUMVS+JELCNT(3)
   20 IF (NUMVS.EQ.0) GO TO 150
C 
C  IUR(I) TEMPORARILY CONTAINS THE NUMBER OF SOURCES CONNECTED TO 
C  NODE I 
C 
      ID=6
   30 ISTART=LOCATE(ID)
      ISTOP=LOCATE(ID+1)-1
      IF (ISTART.GT.ISTOP) GO TO 50
      DO 40 I=ISTART,ISTOP
      LOC=LOCAL(I)
      NODE1=NODPLC(LOC)
      NODE2=NODPLC(LOC+1) 
      IUR(NODE1)=IUR(NODE1)+1 
      IUR(NODE2)=IUR(NODE2)+1 
      NODPLC(LOC+2)=0 
   40 CONTINUE
   50 IF (MODE.GT.1) GO TO 60 
      ID=ID-3 
      IF (ID.GT.0) GO TO 30
C 
C  SEARCH THROUGH SOURCES AND LOAD THOSE WITH A NODE THAT HAS NO
C  OTHER SOURCES CONNECTED
C 
   60 ILOAD=1 
   70 IFLAG=0 
      ID=6
   80 ISTART=LOCATE(ID)
      ISTOP=LOCATE(ID+1)-1
      IF (ISTART.GT.ISTOP) GO TO 130
      DO 120 I=ISTART,ISTOP
      LOC=LOCAL(I)
      IF (NODPLC(LOC+2).NE.0) GO TO 120
      NODE1=NODPLC(LOC)
      ITRY=0
   90 IF (NODE1.EQ.1) GO TO 110
      IF (JMNODE(NODE1).GT.0) GO TO 110
      IF (IUR(NODE1).GT.1) GO TO 110
      JMNODE(NODE1)=NEXNOD
      IORDER(NEXNOD)=NODE1
      NEXNOD=NEXNOD-1 
      NODPLC(LOC+2)=1 
      IF (ITRY.EQ.0) GO TO 100
      NODPLC(LOC+2)=-1
      NODPLC(LOC+1)=NODPLC(LOC)
      NODPLC(LOC)=NODE1
  100 NODE2=NODPLC(LOC+1) 
C 
C  AFTER A SOURCE HAS BEEN LOADED, IT IS DELETED FROM THE IUR COUNTER 
C 
      IUR(NODE1)=IUR(NODE1)-1 
      IUR(NODE2)=IUR(NODE2)-1 
      IFLAG=1 
      MATLOC(ILOAD+800)=I 
      ILOAD=ILOAD+1
      IF (ILOAD.GT.NUMVS) GO TO 150
      GO TO 120
  110 IF (ITRY.EQ.1) GO TO 120
      ITRY=1
      NODE1=NODPLC(LOC+1) 
      GO TO 90
  120 CONTINUE
C 
C  IN DC ANALYSIS, CYCLE THROUGH INDUCTORS ALSO
C 
  130 IF (MODE.GT.1) GO TO 140
      ID=ID-3 
      IF (ID.GT.0) GO TO 80
C 
C  IF NO ELEMENT WAS LOADED ON ABOVE SEARCH, THE CIRCUIT CONTAINS A
C  LOOP OF SOURCES AND/OR INDUCTORS
C 
  140 IF (IFLAG.EQ.1) GO TO 70
      NOGO=1
      WRITE (5,141)
  141 FORMAT (/1X,'  INPUT DATA CONTAINS A LOOP OF VOLTAGE '
     1  'SOURCES AND/OR INDUCTORS'/) 
      GO TO 1100
C 
C  ORDER REMAINING NODES IN THE CIRCUIT ARBITRARILY
C 
  150 NEXNOD=1
      DO 160 I=1,NUMNOD
  160 IUR(I)=1
      IUR(NUMNOD+1)=1 
      DO 170 I=2,NUMNOD
      IF (JMNODE(I).NE.0) GO TO 170
      JMNODE(I)=NEXNOD
      IORDER(NEXNOD)=I
      NEXNOD=NEXNOD+1 
  170 CONTINUE
      NSTOP=NEXNOD-1
C 
C  RESERVE MATRIX LOCATIONS IN IUR,IUC
C 
C  RESISTORS, CAPACITORS, INDUCTORS
C 
      ISTOP=LOCATE(4)-1
      IF (MODE.NE.1) GO TO 210
      ISTOP=LOCATE(3)-1
  210 IF (ISTOP.LT.1) GO TO 230
      DO 220 I=1,ISTOP
      LOC=LOCAL(I)
      NODE1=NODPLC(LOC)
      NODE2=NODPLC(LOC+1) 
      CALL RESERV(NODE1,NODE2)
  220 CONTINUE
C 
C  VOLTAGE CONTROLLED CURRENT SOURCES 
C 
  230 ISTART=LOCATE(5)
      ISTOP=LOCATE(6)-1
      IF (ISTART.GT.ISTOP) GO TO 250
      DO 240 I=ISTART,ISTOP
      LOC=LOCAL(I)
      NODE1=NODPLC(LOC)
      NODE2=NODPLC(LOC+1) 
      NODE3=NODPLC(LOC+2) 
      NODE4=NODPLC(LOC+3) 
      CALL RESERV(NODE1,NODE3)
      CALL RESERV(NODE1,NODE4)
      CALL RESERV(NODE2,NODE3)
      CALL RESERV(NODE2,NODE4)
  240 CONTINUE
C 
C  TRANSISTORS
C 
  250 ISTART=LOCATE(7)
      ISTOP=LOCATE(8)-1
      IF (ISTART.GT.ISTOP) GO TO 270
      DO 260 I=ISTART,ISTOP
      LOC=LOCAL(I)
      NODE1=NODPLC(LOC)
      NODE2=NODPLC(LOC+1) 
      NODE3=NODPLC(LOC+2) 
      NODE4=NODPLC(LOC+3) 
      NODE5=NODPLC(LOC+4) 
      NODE6=NODPLC(LOC+5) 
      CALL RESERV(NODE1,NODE4)
      CALL RESERV(NODE2,NODE5)
      CALL RESERV(NODE3,NODE6)
      CALL RESERV(NODE4,NODE5)
      CALL RESERV(NODE4,NODE6)
      CALL RESERV(NODE5,NODE6)
  260 CONTINUE
C 
C  DIODES 
C 
  270 ISTART=LOCATE(8)
      ISTOP=LOCATE(9)-1
      IF (ISTART.GT.ISTOP) GO TO 290
      DO 280 I=ISTART,ISTOP
      LOC=LOCAL(I)
      NODE1=NODPLC(LOC)
      NODE2=NODPLC(LOC+1) 
      NODE3=NODPLC(LOC+2) 
      CALL RESERV(NODE1,NODE3)
      CALL RESERV(NODE2,NODE3)
  280 CONTINUE
C 
C  JFETS
C 
  290 ISTART=LOCATE(9)
      ISTOP=LOCATE(10)-1
      IF (ISTART.GT.ISTOP) GO TO 310
      DO 300 I=ISTART,ISTOP
      LOC=LOCAL(I)
      NODE1=NODPLC(LOC)
      NODE2=NODPLC(LOC+1) 
      NODE3=NODPLC(LOC+2) 
      NODE4=NODPLC(LOC+3) 
      NODE5=NODPLC(LOC+4) 
      CALL RESERV(NODE1,NODE4)
      CALL RESERV(NODE2,NODE4)
      CALL RESERV(NODE2,NODE5)
      CALL RESERV(NODE3,NODE5)
      CALL RESERV(NODE4,NODE5)
  300 CONTINUE
C 
C  MOSFETS
C 
  310 ISTART=LOCATE(10)
      ISTOP=LOCATE(11)-1
      IF (ISTART.GT.ISTOP) GO TO 350
      DO 320 I=ISTART,ISTOP
      LOC=LOCAL(I)
      NODE1=NODPLC(LOC)
      NODE2=NODPLC(LOC+1) 
      NODE3=NODPLC(LOC+2) 
      NODE4=NODPLC(LOC+3) 
      NODE5=NODPLC(LOC+4) 
      NODE6=NODPLC(LOC+5) 
      CALL RESERV(NODE1,NODE5)
      CALL RESERV(NODE2,NODE4)
      CALL RESERV(NODE2,NODE5)
      CALL RESERV(NODE2,NODE6)
      CALL RESERV(NODE3,NODE6)
      CALL RESERV(NODE4,NODE5)
      CALL RESERV(NODE4,NODE6)
      CALL RESERV(NODE5,NODE6)
  320 CONTINUE
C 
C  SOURCE TERMS ... IF SOURCE HAS POSITIVE NODE N+ AND NEGATIVE NODE
C  N-, THEN FOR EVERY (N+,I) TERM (WITH I LT N+) THAT EXISTS, RESERVE 
C  A (N-,I) TERM
C 
  350 IF (NUMVS.EQ.0) GO TO 400
      DO 380 I=1,NUMVS
      IELNUM=MATLOC(I+800)
      LOC=LOCAL(IELNUM)
      NODE1=NODPLC(LOC)
      NODE2=NODPLC(LOC+1) 
      IF (NODE2.EQ.1) GO TO 380
      JSTART=IUR(NODE1)
      JSTOP=IUR(NODE1+1)-1
      IF (JSTART.GT.JSTOP) GO TO 380
      NTERMS=0
      DO 360 J=JSTART,JSTOP
      NTERMS=NTERMS+1 
      ITROW(NTERMS)=IUC(J)
  360 CONTINUE
      DO 370 J=1,NTERMS
      CALL RESERV(NODE2,ITROW(J)) 
  370 CONTINUE
  380 CONTINUE
C 
C  CALL POINT TO REORDER NODES FOR MINIMAL FILLIN 
C 
  400 IF (IGOOF.EQ.1) GO TO 1000
      NTTB=IUR(NUMNOD+1)-1
      CALL POINT
      IF (IGOOF.EQ.1) GO TO 1000
C 
C  STORE MATRIX LOCATIONS FOR EACH DEVICE 
C 
      IFIND=NUMVS+2*(JELCNT(1)+JELCNT(2)+JELCNT(3))+4*JELCNT(5)
     1  +12*JELCNT(7)+4*JELCNT(8)+10*JELCNT(9)+16*JELCNT(10)
      IF (IFIND.GT.1800) GO TO 1000
      IF (NUMVS.EQ.0) GO TO 410
      DO 405 I=1,NUMVS
  405 MATLOC(I)=MATLOC(I+800) 
  410 IFIND=NUMVS 
C 
C  RESISTORS, CAPACITORS, INDUCTORS
C 
      ISTOP=LOCATE(4)-1
      IF (MODE.NE.1) GO TO 420
      ISTOP=LOCATE(3)-1
  420 IF (ISTOP.LT.1) GO TO 440
      DO 430 I=1,ISTOP
      LOC=LOCAL(I)
      NODE1=NODPLC(LOC)
      NODE2=NODPLC(LOC+1) 
      MATLOC(IFIND+1)=INDEX(NODE1,NODE2)
      MATLOC(IFIND+2)=INDEX(NODE2,NODE1)
      IFIND=IFIND+2
  430 CONTINUE
C 
C  VOLTAGE DEPENDENT CURRENT SOURCES
C 
  440 ISTART=LOCATE(5)
      ISTOP=LOCATE(6)-1
      IF (ISTART.GT.ISTOP) GO TO 460
      DO 450 I=ISTART,ISTOP
      LOC=LOCAL(I)
      NODE1=NODPLC(LOC)
      NODE2=NODPLC(LOC+1) 
      NODE3=NODPLC(LOC+2) 
      NODE4=NODPLC(LOC+3) 
      MATLOC(IFIND+1)=INDEX(NODE1,NODE3)
      MATLOC(IFIND+2)=INDEX(NODE1,NODE4)
      MATLOC(IFIND+3)=INDEX(NODE2,NODE3)
      MATLOC(IFIND+4)=INDEX(NODE2,NODE4)
      IFIND=IFIND+4
  450 CONTINUE
C 
C  TRANSISTORS
C 
  460 ISTART=LOCATE(7)
      ISTOP=LOCATE(8)-1
      IF (ISTART.GT.ISTOP) GO TO 480
      DO 470 I=ISTART,ISTOP
      LOC=LOCAL(I)
      NODE1=NODPLC(LOC)
      NODE2=NODPLC(LOC+1) 
      NODE3=NODPLC(LOC+2) 
      NODE4=NODPLC(LOC+3) 
      NODE5=NODPLC(LOC+4) 
      NODE6=NODPLC(LOC+5) 
      MATLOC(IFIND+1)=INDEX(NODE1,NODE4)
      MATLOC(IFIND+2)=INDEX(NODE2,NODE5)
      MATLOC(IFIND+3)=INDEX(NODE3,NODE6)
      MATLOC(IFIND+4)=INDEX(NODE4,NODE1)
      MATLOC(IFIND+5)=INDEX(NODE4,NODE5)
      MATLOC(IFIND+6)=INDEX(NODE4,NODE6)
      MATLOC(IFIND+7)=INDEX(NODE5,NODE2)
      MATLOC(IFIND+8)=INDEX(NODE5,NODE4)
      MATLOC(IFIND+9)=INDEX(NODE5,NODE6)
      MATLOC(IFIND+10)=INDEX(NODE6,NODE3) 
      MATLOC(IFIND+11)=INDEX(NODE6,NODE4) 
      MATLOC(IFIND+12)=INDEX(NODE6,NODE5) 
      IFIND=IFIND+12
  470 CONTINUE
C 
C  DIODES 
C 
  480 ISTART=LOCATE(8)
      ISTOP=LOCATE(9)-1
      IF (ISTART.GT.ISTOP) GO TO 500
      DO 490 I=ISTART,ISTOP
      LOC=LOCAL(I)
      NODE1=NODPLC(LOC)
      NODE2=NODPLC(LOC+1) 
      NODE3=NODPLC(LOC+2) 
      MATLOC(IFIND+1)=INDEX(NODE1,NODE3)
      MATLOC(IFIND+2)=INDEX(NODE2,NODE3)
      MATLOC(IFIND+3)=INDEX(NODE3,NODE1)
      MATLOC(IFIND+4)=INDEX(NODE3,NODE2)
      IFIND=IFIND+4
  490 CONTINUE
C 
C  JFETS
C 
  500 ISTART=LOCATE(9)
      ISTOP=LOCATE(10)-1
      IF (ISTART.GT.ISTOP) GO TO 520
      DO 510 I=ISTART,ISTOP
      LOC=LOCAL(I)
      NODE1=NODPLC(LOC)
      NODE2=NODPLC(LOC+1) 
      NODE3=NODPLC(LOC+2) 
      NODE4=NODPLC(LOC+3) 
      NODE5=NODPLC(LOC+4) 
      MATLOC(IFIND+1)=INDEX(NODE1,NODE4)
      MATLOC(IFIND+2)=INDEX(NODE2,NODE4)
      MATLOC(IFIND+3)=INDEX(NODE2,NODE5)
      MATLOC(IFIND+4)=INDEX(NODE3,NODE5)
      MATLOC(IFIND+5)=INDEX(NODE4,NODE1)
      MATLOC(IFIND+6)=INDEX(NODE4,NODE2)
      MATLOC(IFIND+7)=INDEX(NODE4,NODE5)
      MATLOC(IFIND+8)=INDEX(NODE5,NODE2)
      MATLOC(IFIND+9)=INDEX(NODE5,NODE3)
      MATLOC(IFIND+10)=INDEX(NODE5,NODE4) 
      IFIND=IFIND+10
  510 CONTINUE
C 
C  MOSFETS
C 
  520 ISTART=LOCATE(10)
      ISTOP=LOCATE(11)-1
      IF (ISTART.GT.ISTOP) GO TO 550
      DO 530 I=ISTART,ISTOP
      LOC=LOCAL(I)
      NODE1=NODPLC(LOC)
      NODE2=NODPLC(LOC+1) 
      NODE3=NODPLC(LOC+2) 
      NODE4=NODPLC(LOC+3) 
      NODE5=NODPLC(LOC+4) 
      NODE6=NODPLC(LOC+5) 
      MATLOC(IFIND+1)=INDEX(NODE1,NODE5)
      MATLOC(IFIND+2)=INDEX(NODE2,NODE4)
      MATLOC(IFIND+3)=INDEX(NODE2,NODE5)
      MATLOC(IFIND+4)=INDEX(NODE2,NODE6)
      MATLOC(IFIND+5)=INDEX(NODE3,NODE6)
      MATLOC(IFIND+6)=INDEX(NODE4,NODE2)
      MATLOC(IFIND+7)=INDEX(NODE4,NODE5)
      MATLOC(IFIND+8)=INDEX(NODE4,NODE6)
      MATLOC(IFIND+9)=INDEX(NODE5,NODE1)
      MATLOC(IFIND+10)=INDEX(NODE5,NODE2) 
      MATLOC(IFIND+11)=INDEX(NODE5,NODE4) 
      MATLOC(IFIND+12)=INDEX(NODE5,NODE6) 
      MATLOC(IFIND+13)=INDEX(NODE6,NODE2) 
      MATLOC(IFIND+14)=INDEX(NODE6,NODE3) 
      MATLOC(IFIND+15)=INDEX(NODE6,NODE4) 
      MATLOC(IFIND+16)=INDEX(NODE6,NODE5) 
      IFIND=IFIND+16
  530 CONTINUE
C 
C  VOLTAGE SOURCES (AND INDUCTORS IN DC ANALYSIS) 
C 
  550 IF (NUMVS.EQ.0) GO TO 600
      DO 560 I=1,NUMVS
      IELNUM=MATLOC(I)
      LOC=LOCAL(IELNUM)
      NODE1=NODPLC(LOC)
      NODE2=NODPLC(LOC+1) 
      NODPLC(LOC+3)=JMNODE(NODE1) 
      NODPLC(LOC+4)=JMNODE(NODE2) 
  560 CONTINUE
C 
C  FINISHED
C 
  600 LASTUT=IUS+IUR(NUMNOD+1)-2
      LASTLT=LASTUT+MIRROR
      NUTAR=IUR(NSTOP+1)-1
      NSTERM=IUR(NUMNOD+1)-1-NUTAR
      NUTBR=(NTTB-NSTERM)/2
      IFILL=NUTAR-NUTBR
      NTTERM=NUMNOD+2*(NUTAR+NSTERM)-1
      NNODE=NUMNOD-1
      PERSPA=100.0*(1.0-FLOAT(NTTERM)/FLOAT(NNODE*NNODE)) 
      IOPS=0
      IF (NSTOP.EQ.0) GO TO 1100
      DO 610 I=1,NSTOP
      NOPS=IUR(I+1)-IUR(I)
      IOPS=IOPS+NOPS*NOPS 
  610 CONTINUE
        GO TO 1100
 1000 NOGO=1
      WRITE (5,1001) IUR(NUMNOD+1),IFIND
1001  FORMAT (/1X,'  PROGRAM ERROR ... SETUP'//
     1   5X,'ARRAY SIZE EXCEEDED ...  IUTOT = ',I4,3X,'IFIND = ',I4)
1100    RETURN
      END 
    
        SUBROUTINE RDLST(KX,NFLAG,BU,BL,DICT,C)
        DOUBLE PRECISION OBVAL
C DECLARATIONS MADE 6/19/73
C*S     START COMMON
        COMMON /MIPCOM/ V,AV,WDCNT,DUEL,IR,IK,RI,L,M,N
        COMMON /MIPCOM/ Q,QP,QPP,NETA,MAXETA,PRIM,NODUAL,NOPRIM
        COMMON /MIPCOM/ BIG,NPM,MP1,NP1,DELTA,UNB,ITYPE,ISTAR,IRP,IRPP
        COMMON /MIPCOM/ TOL,TOL1,OPTION,ISW,ID,CHSIN,ITER,OBVAL,OBJ1
        COMMON /OUTCOM/ JL,JR,NAML,VAL,NAMR,KR,PR
        COMMON /LINCNT/ LINE
C       LINE IS CURRENT LINE NO. IN CREATE FILE
        INTEGER DICT, OPTION, OBJ1
        INTEGER V,AV,CB,CN,WDCNT,DUEL ,PRIM,UNB,RI
C*E     END COMMON
C
        DIMENSION NFLAG(1),BU(1),BL(1),DICT(0/1),C(1)
C
        INTEGER OPT1
C       RDLST READS THE INPUT FILE AND ENTERS VALUES FOR UPPER AND
C       LOWER BOUNDS AND FROZEN VARIABLES.
D       WRITE (ID,5000) 
D5000   FORMAT (' ENTERING RDLST ********')
D       WRITE(ID,5010)
D5010   FORMAT(' I     DICT(I)')
D       MN = M+N
D       WRITE (ID,5020) (I,DICT(I), I = 1, MN)
D5020   FORMAT(1X,I4,2X,A5)
C
C
C       INITIALIZE NFLAG
C
       DO 100 I =M+1, N+M
100     NFLAG(I) = 0.





C
C       INITIALIZE LOWER BOUNDS = O, AND UPPER BOUNDS = INFINITY
C

        DO 4940 I = 1, N
        BL(I) = 0
4940    BU(I) = BIG


490     IF(KX .EQ. 'S') GO TO 498
        IF(KX .EQ. 'B') GO TO 494
        IF(KX .EQ. 'Z') ICOUNT = 'FREEZ'
        IF(KX .EQ. 'F') ICOUNT = 'FREE'
        OPT1 = ICOUNT
        IF(OPTION .EQ. 0) GO TO 491
        TYPE 531, ICOUNT
531     FORMAT(/1X,'VARIABLES UNDER OPTION ',A5)
491     READ(1,525) KX, INAME
525     FORMAT(A1,A5)
        IF(KX .EQ. 'S') GO TO 498
        IF(KX .EQ. 'B') GO TO 494
        IF(KX .EQ. 'F') ICOUNT ='FREE'
        IF(KX .EQ. 'Z') ICOUNT = 'FREEZ'
        IF(OPTION .EQ. 0) GO TO 527
        IF(ICOUNT .EQ. OPT1) GO TO 527
        OPT1 = ICOUNT
        TYPE 531, OPT1
532     FORMAT(1X,A5)

        GO TO 491

527     DO 492 J = 1, N
        IF(INAME .NE. DICT(M+J)) GO TO 492
        IF(ICOUNT .NE. 'FREE') GO TO 10
C       VARIABLE IS FREE
        NFLAG(M+J) = 2
        BL(J) = -BIG
        GO TO 20

C       HERE WHEN VARIABLE IS FROZEN
10      NFLAG(M+J) = 3
        BU(J) = 0
        BL(J) = 0
20      IF(OPTION .NE. 0) TYPE 532, DICT(M+J)
        GO TO 491
492     CONTINUE


497     TYPE 493, INAME, ICOUNT
493     FORMAT(1X,'NO VARIABLE NAMED ',A5,' CHECK OPTION ',A5)
        KSTOP = 1

        RETURN

494     IF(OPTION .EQ. 0) GO TO 533
        WRITE(ID,534)
534     FORMAT(1X,'BOUNDED VARIABLES',/,1X,
     +'VARIABLE',3X,'U.BOUND',5X,'L.BOUND',/)
533     READ(1,526) KX,INAME, TEMP1, TEMP2
526     FORMAT(A1,A5,2G)
        IF(KX .EQ. 'S') GO TO 498
        ICOUNT = 'BOUND'

        DO 495 J = 1, N
        IF(INAME .NE. DICT(M+J)) GO TO 495
        IF(NFLAG(M+J) .NE. 2) GO TO 521
        TYPE 522, DICT(M+J)
        KSTOP = 1 
        RETURN

521     IF(NFLAG(M+J) .NE. 3) GO TO 524
        TYPE 523, DICT(M+J)
        KSTOP = 1 
        RETURN
522     FORMAT(1X,'FREE VARIABLE ',A5, ' HAS BEEN BOUNDED.',/,
     +  1X,'EXECUTION ABORTED.'/)
523     FORMAT(1X,'FROZEN VARIABLE ',A5,' HAS BEEN BOUNDED.',/1X,
     +  'CHECK OPTIONS IN INPUT. EXECUTION ABORTED.')

C       HERE WHEN WHEN WE HVE A BOUNDED VARIABLE
524     IF((TEMP1-TEMP2).LT.0)  GO TO 610

C***    IF((TEMP1.LT.0).OR.(TEMP2.LT.0))  GO TO 620

        NFLAG(M+J) = 1
        BU(J) = TEMP1
        BL(J) = TEMP2
        IF(OPTION .EQ. 0) GO TO 533
        WRITE(ID,535), INAME, TEMP1, TEMP2
535     FORMAT(1X,A5,1X,F12.3,1X,F12.3)
C       READ ANOTHER VARIABLE
        GO TO 533

495     CONTINUE
        GO TO 497
C 
C       AT THIS POINT WE ARE AT THE END OF BOUNDED VARIABLES
C
C       WE MUST ADJUST THE VALUE OF THE OBJECTIVE FUNCTION
C       TO COMPENSATE FOR VARIABLES WITH A POSITIVE LOWER BOUND
C
498     OBVAL = 0
        DO 600 I = 1, N
        IF(BL(I)) 590,600,590
590     IF(BL(I) .EQ. -BIG) GO TO 600
        OBVAL = OBVAL - BL(I) * C(I)
600     CONTINUE
        RETURN
        
610     TYPE 612, DICT(M+J)
612     FORMAT(' VARIABLE ',A5, ' HAS  LOWER BOUND GREATER THAN'
     +  ,/,' UPPER BOUND.  EXECUTION ABORTED.',/)

        CALL EXIT

620     TYPE 622, DICT(M+J)
622     FORMAT(' VARIABLE ',A5,' HAS UPPER OR LOWER BOUND LESS THAN'
     +  ,/,' ZERO.  EXECUTION ABORTED.',/)

        CALL EXIT

        END
